{"version":3,"sources":["config.js","services/TopicService.js","services/LessonService.js","services/ModuleService.js","services/CourseService.js","components/CourseManager/CourseTable/CourseRow/CourseRowComponent.js","components/CourseManager/CourseTable/CourseTableComponent.js","utils/DateUtils.js","components/CourseManager/CourseGrid/CourseCard/CourseCardComponent.js","components/CourseManager/CourseGrid/CourseGridComponent.js","containers/CourseManager/CourseManagerContainer.js","store/ModuleReducer.js","store/SelectedCourseReducer.js","store/SelectedModuleReducer.js","components/CourseEditor/ModuleList/ModuleRow/ModuleRowComponent.js","store/LessonReducer.js","components/CourseEditor/ModuleList/ModuleListComponent.js","components/CourseEditor/EditorNavbar/LessonTabs/LessonTabsComponent.js","store/SelectedTopicReducer.js","store/SelectedLessonReducer.js","store/TopicReducer.js","components/CourseEditor/EditorNavbar/EditorNavbarComponent.js","components/CourseEditor/LessonView/LessonTabComponent.js","utils/Utils.js","components/CourseEditor/LessonView/TopicPills/TopicPillComponent.js","components/CourseEditor/LessonView/TopicPills/WidgetList/Widgets/WidgetTypes.js","services/WidgetService.js","store/WidgetReducer.js","components/CourseEditor/LessonView/TopicPills/WidgetList/Widgets/WidgetFormComponent.js","components/CourseEditor/LessonView/TopicPills/WidgetList/Widgets/HeadingWidgetComponent.js","components/CourseEditor/LessonView/TopicPills/WidgetList/Widgets/ParagraphWidgetComponent.js","store/SelectedWidgetReducer.js","components/CourseEditor/LessonView/TopicPills/WidgetList/WidgetListComponent.js","store/WidgetPreviewReducer.js","containers/CourseEditor/LessonView/WidgetContainer/WidgetContainer.js","components/CourseEditor/LessonView/TopicPills/TopicPillsComponent.js","components/CourseEditor/LessonView/LessonTabsComponent.js","containers/CourseEditor/CourseEditorContainer.js","components/Home/HomeComponent.js","components/Login/LoginComponent.js","components/Error/WIPComponent.js","components/Register/RegisterComponent.js","components/Profile/ProfileComponent.js","components/WhiteboardComponent.js","App.js","serviceWorker.js","store/RootReducer.js","store/Store.js","index.js"],"names":["genericServerUrl","herokuUrl","lessonId","topic","fetch","method","body","JSON","stringify","headers","then","response","json","topicId","moduleId","newLesson","lesson","TopicService","topics","map","_id","courseId","module","newModule","LessonService","lessons","course","ModuleService","modules","CourseRowComponent","state","editing","props","newCourseTitle","title","componentDidUpdate","setState","setEditing","saveCourseRow","courseService","modified","Date","toISOString","status","refreshCourses","courseName","className","onChange","event","target","value","to","this","icon","faEdit","owner","onClick","faCheck","faPencilAlt","faTimes","deleteCourse","faTrash","React","Component","CourseTableComponent","addCourse","theActualNewCourse","alert","sortIcon","sort","includes","faSortDown","faSortUp","id","type","placeholder","sortTitle","sortOwner","sortDate","gridButton","courses","key","isostr","dt","ds","toDateString","ts","toLocaleTimeString","lastColon","lastIndexOf","concat","replace","substring","CourseCardComponent","saveCourseCard","DateUtils","CourseGridComponent","tableButton","CourseManagerContainer","layout","match","params","setLayout","history","push","courseToDelete","prevState","filter","dir","sortCourses","sortFn","a","b","toString","actualCourses","actualArrayOfCourses","prevProps","snapshot","faArrowCircleLeft","aria-label","faTh","faBars","set_modules","delete_module","moduleReducer","action","find","selectedCourseReducer","selected_course","select_module","selectedModuleReducer","selected_module","ModuleRowComponent","newModuleTitle","name","toggleEditing","saveEdit","actualModule","updateModule","removeModule","newSelectedModule","length","selectModule","connect","dispatch","update_module","set_lessons","lessonReducer","ModuleListComponent","addModule","moduleRow","index","actualLessons","loadLessons","create_module","LessonTabsComponent","selected","tab","selectTab","select_topic","selectedTopicReducer","selected_topic","select_lesson","selectedLessonReducer","selected_lesson","set_topics","topicReducer","EditorNavbarComponent","lessonTabsComponent","currentTab","clearSelectedModule","clearSelectedLesson","clearSelectedTopic","clearModules","clearLessons","clearTopics","tabs","addTab","LessonTabComponent","newLessonName","actualLesson","updateLesson","removeLesson","selectLesson","update_lesson","obj","Object","keys","TopicPillComponent","newTopicName","newTopic","actualTopic","updateTopic","removeTopic","selectTopic","update_topic","WidgetTypes","display","widget","widgetId","set_widgets","widgets","update_widget","widgetReducer","WidgetFormComponent","WidgetService","selected_widget","updatedWidget","updateWidget","htmlFor","onBlur","e","updateWidgetName","updateWidgetType","defaultValue","HeadingWidgetComponent","text","updateHeadingSize","size","updateHeadingText","generatePreview","active","widget_preview","ParagraphWidgetComponent","node","createRef","saveText","current","innerText","contentEditable","ref","onInput","selectedWidgetReducer","WidgetListComponent","deleteWidget","reorderUp","newWidgets","setWidgets","reorderDown","createWidget","selectWidget","widgetOrder","faArrowUp","faArrowDown","widgetType","createHeadingWidget","createParagraphWidget","select_widget","widgetPreviewReducer","widgetPreview","WidgetContainer","addWidget","Utils","newWidget","faToggleOn","faToggleOff","toggleWidgetPreview","create_widget","TopicPillsComponent","createTopic","addTopic","topicPill","actualWidgets","create_topic","createLesson","addLesson","lessonTab","newSelectedLesson","loadTopics","create_lesson","dummyTabs","CourseEditorContainer","tabName","CourseService","actualCourse","loadCourse","actualModules","loadModules","filterModules","select_course","find_modules_for_course","HomeComponent","LoginComponent","WIPComponent","RegisterComponent","ProfileComponent","role","disabled","WhiteboardComponent","path","exact","strict","render","location","pathname","component","App","Boolean","window","hostname","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6e096509.chunk.js","sourcesContent":["// Generic server\nexport const genericServerUrl = 'https://wbdv-generic-server.herokuapp.com/api/jhansen';\n\n// Local\nexport const localUrl = 'http://localhost:8080/api';\n\n// Heroku\nexport const herokuUrl = 'https://cs4550-20su1-jhansen.herokuapp.com';","import { genericServerUrl } from '../config';\n\nconst createTopic = (lessonId, topic) =>\n    fetch(`${genericServerUrl}/lessons/${lessonId}/topics`, {\n      method: 'POST',\n      body: JSON.stringify(topic),\n      headers: { 'content-type': 'application/json' }\n    }).then(response => response.json());\n\nconst findTopicsForLesson = (lessonId) =>\n    fetch(`${genericServerUrl}/lessons/${lessonId}/topics`)\n    .then(response => response.json());\n\nconst findTopic = (topicId) =>\n    fetch(`${genericServerUrl}/topics/${topicId}`)\n    .then(response => response.json());\n\nconst updateTopic = (topicId, topic) =>\n    fetch(`${genericServerUrl}/topics/${topicId}`, {\n      method: 'PUT',\n      body: JSON.stringify(topic),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst deleteTopic = (topicId) =>\n    fetch(`${genericServerUrl}/topics/${topicId}`, {method: 'DELETE'})\n    .then(response => response.json());\n\nexport default {\n  createTopic,\n  findTopicsForLesson,\n  findTopic,\n  updateTopic,\n  deleteTopic\n}","import TopicService from './TopicService';\nimport { genericServerUrl } from '../config';\n\nconst createLesson = (moduleId, newLesson) =>\n    fetch(`${genericServerUrl}/modules/${moduleId}/lessons`, {\n      method: 'POST',\n      body: JSON.stringify(newLesson),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json());\n\nconst findLessonsForModule = (moduleId) =>\n    fetch(`${genericServerUrl}/modules/${moduleId}/lessons`)\n    .then(response => response.json());\n\nconst findLesson = (lessonId) =>\n    fetch(`${genericServerUrl}/lessons/${lessonId}`)\n    .then(response => response.json());\n\nconst updateLesson = (lessonId, lesson) =>\n    fetch(`${genericServerUrl}/lessons/${lessonId}`, {\n      method: 'PUT',\n      body: JSON.stringify(lesson),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json());\n\nconst deleteLesson = (lessonId) => {\n  TopicService.findTopicsForLesson(lessonId)\n  .then(topics => topics.map(topic =>\n        TopicService.deleteTopic(topic._id)\n  ));\n  return fetch(`${genericServerUrl}/lessons/${lessonId}`, {method: 'DELETE'})\n  .then(response => response.json());\n};\n\nexport default {\n  createLesson,\n  findLessonsForModule,\n  findLesson,\n  updateLesson,\n  deleteLesson\n}","import LessonService from './LessonService';\nimport { genericServerUrl } from '../config';\n\nconst createModule = (courseId, module) =>\n    fetch(`${genericServerUrl}/courses/${courseId}/modules`, {\n      method: 'POST',\n      body: JSON.stringify(module),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst findModulesForCourse = (courseId) =>\n    fetch(`${genericServerUrl}/courses/${courseId}/modules`)\n    .then(response => response.json());\n\nconst findAllModules = () => {\n  return fetch(`${genericServerUrl}/modules`)\n  .then(response => response.json())\n};\n\nconst findModule = (moduleId) =>\n    fetch(`${genericServerUrl}/modules/${moduleId}`)\n    .then(response => response.json());\n\nconst updateModule = (moduleId, newModule) =>\n    fetch(`${genericServerUrl}/modules/${moduleId}`, {\n      method: 'PUT',\n      body: JSON.stringify(newModule),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst deleteModule = (moduleId) => {\n  LessonService.findLessonsForModule(moduleId)\n  .then(lessons => lessons.map(lesson =>\n      LessonService.deleteLesson(lesson._id)\n  ));\n  return fetch(`${genericServerUrl}/modules/${moduleId}`, {method: 'DELETE'})\n  .then(response => response.json())\n};\n\nexport default {\n  createModule,\n  findModulesForCourse,\n  findAllModules,\n  findModule,\n  updateModule,\n  deleteModule\n}","import ModuleService from './ModuleService';\nimport { genericServerUrl } from '../config';\n\nconst createCourse = (course) =>\n    fetch(`${genericServerUrl}/courses/`, {\n      method: 'POST',\n      body: JSON.stringify(course),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst updateCourse = (courseId, course) =>\n    fetch(`${genericServerUrl}/courses/${courseId}`, {\n      method: 'PUT',\n      body: JSON.stringify(course),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst deleteCourse = (courseId) => {\n  ModuleService.findAllModules(courseId)\n  .then(modules => modules.map(module =>\n    ModuleService.deleteModule(module._id)\n  ));\n  return fetch(`${genericServerUrl}/courses/${courseId}`, {method: 'DELETE'})\n  .then(response => response.json());\n};\n\nconst findCourseById = (courseId) =>\n    fetch(`${genericServerUrl}/courses/${courseId}`)\n    .then(response => response.json());\n\nconst findAllCourses = () =>\n    fetch(`${genericServerUrl}/courses/`)\n    .then(response => response.json());\n\nexport default {\n  createCourse,\n  deleteCourse,\n  findCourseById,\n  findAllCourses,\n  updateCourse\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash, faPencilAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport courseService from '../../../../services/CourseService';\nimport './CourseRowComponent.css';\n\nexport default class CourseRowComponent extends React.Component {\n  state = {\n    editing: false,\n    course: this.props.course,\n    newCourseTitle: this.props.course.title,\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.course !== this.props.course) {\n      this.setState({course: this.props.course})\n    }\n  };\n\n  setEditing = (editing) =>\n      this.setState({...this.state, editing: editing, newCourseTitle: this.state.course.title});\n\n  saveCourseRow = () =>\n      courseService.updateCourse(\n          this.state.course._id,\n          {...this.state.course,\n            title: this.state.newCourseTitle,\n            modified: (new Date()).toISOString()\n          })\n      .then(status => {\n        this.setEditing(false);\n        this.props.refreshCourses();\n      });\n\n  courseName = () =>\n      this.state.editing ?\n          <input\n              className=\"wbdv-field wbdv-course-name-input\"\n              onChange={(event) => this.setState({\n                newCourseTitle: event.target.value\n              })}\n              value={this.state.newCourseTitle}/> :\n          <Link className='wbdv-icon-link' to={`/editor/${this.state.course._id}`}>\n            {this.state.course.title}\n          </Link>;\n\n  render() {\n    return(\n        <tr className={this.state.editing ? 'wbdv-highlighted' : ''}>\n          <td>\n            <Link to={`/editor/${this.state.course._id}`} >\n              <FontAwesomeIcon\n                  className=\"wbdv-icon-link\"\n                  icon={faEdit}\n              />\n            </Link>\n          </td>\n          <td className=\"wbdv-title\">{this.courseName()}</td>\n          <td className=\"wbdv-owner\">{this.state.course.owner}</td>\n          <td className=\"wbdv-last-modified\">{this.state.course.modified}</td>\n          <td className=\"wbdv-button-row\">\n            {\n              this.state.editing ?\n                  <button\n                      className=\"wbdv-button wbdv-green-btn\"\n                      onClick={this.saveCourseRow}\n                  >\n                    <FontAwesomeIcon icon={faCheck}/>\n                  </button> :\n                  <button\n                      className={\"wbdv-button wbdv-green-btn\"}\n                      onClick={() => this.setEditing(true)}\n                  >\n                    <FontAwesomeIcon icon={faPencilAlt}/>\n                  </button>\n            }\n            {\n              this.state.editing ?\n                  <button\n                    className='float-right wbdv-red-btn wbdv-button wbdv-delete'\n                    onClick={() => this.setEditing(false)}\n                  >\n                    <FontAwesomeIcon icon={faTimes}/>\n                  </button> :\n                  <button\n                      className=\"float-right wbdv-red-btn wbdv-button wbdv-delete\"\n                      onClick={() => this.props.deleteCourse(this.props.course)}\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </button>\n            }\n          </td>\n        </tr>\n    )\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport CourseRowComponent from \"./CourseRow/CourseRowComponent\";\nimport courseService from \"../../../services/CourseService\";\nimport '../../../styles.css';\nimport './CourseTableComponent.css';\n\n\nexport default class CourseTableComponent extends React.Component {\n  state = {\n    newCourseTitle: '',\n  };\n\n  addCourse = (title) => {\n    if (this.state.newCourseTitle !== '') {\n      courseService.createCourse({\n        title: title,\n        owner: 'me',\n        modified: (new Date()).toISOString()\n      })\n      .then(theActualNewCourse => {\n        this.props.refreshCourses();\n        this.setState({newCourseTitle: ''});\n      });\n    } else {\n      alert('New course title cannot be empty.');\n    }\n  };\n\n  sortIcon = () => <FontAwesomeIcon\n      className='wbdv-sort-icon'\n      icon={this.props.sort.includes('desc') ? faSortDown : faSortUp}\n  />;\n\n  render() {\n    return (\n        <div className=\"wbdv-class-table\">\n          <div className=\"wbdv-title-bar wbdv-course-table-header\">\n            <h2>Courses</h2>\n            <form className=\"wbdv-add-course-chunk\">\n              <input\n                  className=\"wbdv-field wbdv-new-course\"\n                  id=\"add-course-title\"\n                  type=\"text\"\n                  onChange={(event) => this.setState({\n                    newCourseTitle: event.target.value\n                  })}\n                  value={this.state.newCourseTitle}\n                  placeholder=\"Add a course\"\n                  title=\"Add the title of the new course\"\n              />\n              <div className=\"wbdv-button wbdv-add-course wbdv-icon-link\"\n                   onClick={ () => this.addCourse(this.state.newCourseTitle) }\n              >+</div>\n            </form>\n          </div>\n          <table className=\"table table-striped wbdv-course-table\">\n            <thead>\n              <tr>\n                <th></th>\n                <th onClick={this.props.sortTitle}>\n                  <div>\n                    Title\n                    {this.props.sort.includes('title') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th onClick={this.props.sortOwner} className=\"wbdv-owner\">\n                  <div>\n                    Owned By\n                    {this.props.sort.includes('owner') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th onClick={this.props.sortDate} className=\"wbdv-last-modified\">\n                  <div>\n                    Modified\n                    {this.props.sort.includes('date') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th>\n                  <div className='wbdv-grid-btn-block'>\n                    <div className='wbdv-grid-btn-label'>\n                      Grid view:\n                    </div>\n                    <div className='wbdv-grid-btn'>\n                      {this.props.gridButton}\n                    </div>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.props.courses.map(course =>\n                <CourseRowComponent\n                    refreshCourses={this.props.refreshCourses}\n                    deleteCourse={this.props.deleteCourse}\n                    key={course._id}\n                    course={course}/>\n            )}\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n}","const toLocalDateTime = (isostr) => {\n  const dt = new Date(isostr);\n  const ds = dt.toDateString();\n  const ts = dt.toLocaleTimeString();\n  const lastColon = ts.lastIndexOf(':');\n  return ds.concat(' ',\n      ts.replace(ts.substring(lastColon, lastColon + 3), ' '));\n};\n\nconst toShortLocalDateTime = (isostr) => {\n  const dt = new Date(isostr);\n  if (dt.toDateString() !== new Date().toDateString()) return dt.toDateString();\n  else {\n    const ts = dt.toLocaleTimeString();\n    const lastColon = ts.lastIndexOf(':');\n    return ts.replace(ts.substring(lastColon, lastColon + 3), ' ');\n  }\n};\n\nexport default {\n  toLocalDateTime,\n  toShortLocalDateTime\n}","import React from 'react';\nimport courseService from \"../../../../services/CourseService\";\nimport DateUtils from \"../../../../utils/DateUtils\";\nimport './CourseCardComponent.css';\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faPencilAlt,\n  faTimes,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class CourseCardComponent extends React.Component {\n  state = {\n    editing: false,\n    course: this.props.course,\n    newCourseTitle: this.props.course.title,\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.course !== this.props.course) {\n      this.setState({course: this.props.course})\n    }\n  };\n\n  setEditing = (editing) =>\n      this.setState({editing: editing});\n\n  saveCourseCard = () =>\n      courseService.updateCourse(\n          this.state.course._id,\n          {...this.state.course,\n            title: this.state.newCourseTitle,\n            modified: (new Date()).toISOString()\n          })\n      .then(status => {\n        this.setEditing(false);\n        this.props.refreshCourses();\n      });\n\n  courseName = () =>\n      this.state.editing ?\n          <input\n              className=\"wbdv-field wbdv-course-name-input\"\n              onChange={(event) => this.setState({\n                newCourseTitle: event.target.value\n              })}\n              value={this.state.newCourseTitle}/> :\n          <Link className='wbdv-icon-link' to={`/editor/${this.state.course._id}`}>\n            {this.state.course.title}\n          </Link>;\n\n  render() {\n    return (\n        <div className='wbdv-grid-item'>\n          <div className='wbdv-card-preview'>\n            <div className='wbdv-preview-text'>\n              Preview\n            </div>\n          </div>\n          <div className='wbdv-card-edit-block'>\n            <div className='wbdv-name-block'>\n              {this.courseName()}\n            </div>\n            <div className='wbdv-modified-info'>\n              Modified:&nbsp;\n              {DateUtils.toShortLocalDateTime(this.props.course.modified)}\n            </div>\n            <div className='wbdv-card-btn-row'>\n              {\n                this.state.editing ?\n                    <button\n                        className=\"wbdv-button wbdv-green-btn wbdv-card-btn\"\n                        onClick={this.saveCourseCard}\n                    >\n                      <FontAwesomeIcon icon={faCheck}/>\n                    </button> :\n                    <button\n                        className={\"wbdv-button wbdv-green-btn wbdv-card-btn\"}\n                        onClick={() => this.setEditing(true)}\n                    >\n                      <FontAwesomeIcon icon={faPencilAlt}/>\n                    </button>\n              }\n              {\n                this.state.editing ?\n                    <button\n                        className='float-right wbdv-red-btn wbdv-button wbdv-delete wbdv-card-btn'\n                        onClick={() => this.setEditing(false)}\n                    >\n                      <FontAwesomeIcon icon={faTimes}/>\n                    </button> :\n                    <button\n                        className=\"float-right wbdv-red-btn wbdv-button wbdv-delete wbdv-card-btn\"\n                        onClick={() => this.props.deleteCourse(this.props.course)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>\n              }\n            </div>\n          </div>\n        </div>\n    )};\n}","import React from \"react\";\nimport courseService from \"../../../services/CourseService\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport CourseCardComponent from './CourseCard/CourseCardComponent';\nimport './CourseGridComponent.css';\n\nexport default class CourseGridComponent extends React.Component {\n  state = {\n    newCourseTitle: '',\n  };\n\n  addCourse = (title) => {\n    if (this.state.newCourseTitle !== '') {\n      courseService.createCourse({\n        title: title,\n        owner: 'me',\n        modified: (new Date()).toISOString()\n      })\n      .then(theActualNewCourse => {\n        this.props.refreshCourses();\n        this.setState({newCourseTitle: ''});\n      });\n    } else {\n      alert('New course title cannot be empty.');\n    }\n  };\n\n  sortIcon = () => <FontAwesomeIcon\n      className='wbdv-sort-icon'\n      icon={this.props.sort.includes('desc') ? faSortDown : faSortUp}\n  />;\n\n  render() {\n    return(\n        <div className='wbdv-grid-container'>\n          <div className='wbdv-title-bar wbdv-course-grid-header'>\n            <h2>Courses</h2>\n            <form className=\"wbdv-add-course-chunk\">\n              <input\n                  className=\"wbdv-field wbdv-new-course\"\n                  id=\"add-course-title\"\n                  type=\"text\"\n                  onChange={(event) => this.setState({\n                    newCourseTitle: event.target.value\n                  })}\n                  value={this.state.newCourseTitle}\n                  placeholder=\"Add a course\"\n                  title=\"Add the title of the new course\"\n              />\n              <div className=\"wbdv-button wbdv-add-course wbdv-icon-link\"\n                   onClick={ () => this.addCourse(this.state.newCourseTitle) }\n              >+</div>\n            </form>\n          </div>\n          <div className='wbdv-grid-sort-bar'>\n            <div className='wbdv-sort-button-row'>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortTitle}\n              >\n                Title\n                {this.props.sort.includes('title') ? this.sortIcon() : null}\n              </div>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortOwner}\n              >\n                Owner\n                {this.props.sort.includes('owner') ? this.sortIcon() : null}\n              </div>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortDate}\n              >\n                Modified\n                {this.props.sort.includes('date') ? this.sortIcon() : null}\n                </div>\n            </div>\n            <div className='wbdv-table-btn-block'>\n              <div className='wbdv-table-btn-label'>\n                List view:\n              </div>\n              <div className='wbdv-table-btn'>\n                {this.props.tableButton}\n              </div>\n            </div>\n          </div>\n          <div className='wbdv-class-grid'>\n            {this.props.courses.map(course =>\n                <CourseCardComponent\n                    refreshCourses={this.props.refreshCourses}\n                    deleteCourse={this.props.deleteCourse}\n                    key={course._id}\n                    course={course}\n                />\n            )}\n          </div>\n        </div>\n    )\n  }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft, faTh, faBars } from '@fortawesome/free-solid-svg-icons';\nimport CourseTableComponent from \"../../components/CourseManager/CourseTable/CourseTableComponent\";\nimport CourseGridComponent from \"../../components/CourseManager/CourseGrid/CourseGridComponent\";\nimport courseService from \"../../services/CourseService\";\nimport DateUtils from '../../utils/DateUtils';\nimport '../../styles.css';\nimport './CourseManagerContainer.css';\n\nclass CourseManagerContainer extends React.Component {\n  state = {\n    layout: this.props.match.params.layout,\n    courses: [],\n    sort: 'date-desc',\n  };\n\n  componentDidMount() {\n    courseService.findAllCourses()\n    .then(actualArrayOfCourses =>\n        this.setState({ courses: actualArrayOfCourses.map((course) => {\n          return {...course, modified: DateUtils.toLocalDateTime(course.modified)}\n        })})\n    )\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(prevProps.match.params.layout !== this.props.match.params.layout) {\n      this.setState({ layout: this.props.match.params.layout })\n    }\n  }\n\n  setLayout = (layout) => {\n    this.props.history.push(`/courses/${layout}/`)\n  };\n\n  deleteCourse = (courseToDelete) =>\n      courseService.deleteCourse(courseToDelete._id)\n      .then(status => this.setState(prevState => ({\n        courses: prevState.courses.filter(course => course !== courseToDelete)\n      })));\n\n  sortTitle = (event, dir = '') => {\n    let sort;\n    if (dir) sort = 'title-'.concat(dir);\n    else sort = this.state.sort === 'title-desc' ? 'title-asc' : 'title-desc';\n    this.setState({...this.state, sort});\n  };\n\n  sortOwner = (event, dir = '') => {\n    let sort;\n    if (dir) sort = 'owner-'.concat(dir);\n    else  sort = this.state.sort === 'owner-desc' ? 'owner-asc' : 'owner-desc';\n    this.setState({...this.state, sort});\n  };\n\n  sortDate = () => {\n    this.setState({\n      ...this.state,\n      sort: this.state.sort === 'date-desc' ? 'date-asc' : 'date-desc',\n    });\n  };\n\n  sortCourses = () => {\n    let sortFn;\n    if (this.state.sort === 'title-asc') {\n      sortFn = (a, b) => a.title.toString() <= b.title.toString() ? 1 : -1;\n    } else if (this.state.sort === 'title-desc') {\n      sortFn = (a, b) => a.title.toString() <= b.title.toString() ? -1 : 1;\n    } else if (this.state.sort === 'owner-asc') {\n      sortFn = (a, b) => a.owner.toString() <= b.owner.toString() ? 1 : -1;\n    } else if (this.state.sort === 'owner-desc') {\n      sortFn = (a, b) => a.owner.toString() <= b.owner.toString() ? -1 : 1;\n    } else if (this.state.sort === 'date-asc') {\n      sortFn = (a, b) => a.modified.toString() <= b.modified.toString() ? 1 : -1;\n    } else if (this.state.sort === 'date-desc') {\n      sortFn = (a, b) => a.modified.toString() <= b.modified.toString() ? -1 : 1;\n    }\n    return this.state.courses.sort(sortFn);\n  };\n\n  refreshCourses = () => {\n    courseService.findAllCourses()\n    .then((actualCourses => {\n      this.setState(prevState => ({\n            ...prevState,\n            courses: actualCourses.map(course => ({\n                  ...course,\n                  modified: DateUtils.toLocalDateTime(course.modified)\n            }))\n      }));\n    }))\n  };\n\n  render() {\n    return(\n        <div>\n          <nav className=\"navbar fixed-top wbdv-course-list-search-navbar\">\n            <div>\n              <Link to='/'>\n                <FontAwesomeIcon\n                    icon={faArrowCircleLeft}\n                    className='wbdv-icon-link wbdv-back-btn'\n                />\n              </Link>\n              <div className=\"navbar-brand\">\n                Browse Courses\n              </div>\n            </div>\n            <div className=\"wbdv-search-chunk\">\n              <input\n                  className=\"wbdv-field\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n              />\n              <button\n                  className=\"wbdv-button wbdv-green-btn wbdv-course-search-button\"\n                  type=\"submit\"\n              >\n                Search\n              </button>\n            </div>\n          </nav>\n          <div className='wbdv-padded-top'>\n            {\n              this.state.layout === 'table' &&\n              <div>\n                <CourseTableComponent\n                    gridButton={\n                      <FontAwesomeIcon\n                          icon={faTh}\n                          onClick={() => this.setLayout('grid')}\n                          className='wbdv-icon-link wbdv-switch-layout-btn'\n                      />\n                    }\n                    sortTitle={this.sortTitle}\n                    sortOwner={this.sortOwner}\n                    sortDate={this.sortDate}\n                    deleteCourse={this.deleteCourse}\n                    courses={this.sortCourses()}\n                    sort={this.state.sort}\n                    refreshCourses={this.refreshCourses}\n                />\n              </div>\n            }\n            {\n              this.state.layout === 'grid' &&\n              <div>\n                <CourseGridComponent\n                    tableButton={\n                      <FontAwesomeIcon\n                          icon={faBars}\n                          onClick={() => this.setLayout('table')}\n                          className='wbdv-icon-link wbdv-switch-layout-btn'\n                      />\n                    }\n                    sortTitle={this.sortTitle}\n                    sortOwner={this.sortOwner}\n                    sortDate={this.sortDate}\n                    deleteCourse={this.deleteCourse}\n                    courses={this.sortCourses()}\n                    sort={this.state.sort}\n                    refreshCourses={this.refreshCourses}\n                />\n              </div>\n            }\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default CourseManagerContainer\n","export const SET_MODULES = 'SET_MODULES';\nexport const CREATE_MODULE = 'CREATE_MODULE';\nexport const FIND_MODULES_FOR_COURSE = 'FIND_MODULES_FOR_COURSE';\nexport const FIND_MODULE = 'FIND_MODULE';\nexport const UPDATE_MODULE = 'UPDATE_MODULE';\nexport const DELETE_MODULE = 'DELETE_MODULE';\n\n// Action creators\nexport const set_modules = (modules) => {\n  return {type: SET_MODULES, modules}\n};\n\nexport const create_module = (module) => {\n  return {type: CREATE_MODULE, module}\n};\n\nexport const find_modules_for_course = (courseId) => {\n  return {type: FIND_MODULES_FOR_COURSE, courseId}\n};\n\nexport const find_module = (moduleId) => {\n  return {type: FIND_MODULE, moduleId}\n};\n\nexport const update_module = (module) => {\n  return {type: UPDATE_MODULE, module}\n};\n\nexport const delete_module = (moduleId) => {\n  return {type: DELETE_MODULE, moduleId}\n};\n\n// Reducer\nexport const moduleReducer = (modules = [], action) => {\n  switch (action.type) {\n    case SET_MODULES:\n      return action.modules;\n    case CREATE_MODULE:\n      return [...modules, action.module];\n    case FIND_MODULES_FOR_COURSE:\n      return modules.filter(module => module.courseId === action.courseId);\n    case FIND_MODULE:\n      return modules.find(module => module._id === action.moduleId);\n    case UPDATE_MODULE:\n      return [...modules].map(module =>\n          module._id === action.module._id ? action.module : module);\n    case DELETE_MODULE:\n      return modules.filter(module => module._id !== action.moduleId);\n    default:\n      return modules;\n  }\n};","// Actions\nexport const SELECT_COURSE = 'SELECT_COURSE';\n\n// Action creators\nexport const select_course = (course) => {\n  return {type: SELECT_COURSE, course}\n};\n\n// Reducer\nexport const selectedCourseReducer = (selected_course = {}, action) => {\n  switch(action.type) {\n    case SELECT_COURSE:\n      return action.course;\n    default:\n      return selected_course;\n  }\n};","// Actions\nexport const SELECT_MODULE = 'SELECT_MODULE';\n\n// Action creators\nexport const select_module = (module) => {\n  return { type: SELECT_MODULE, module }\n};\n\n// Reducer\nexport const selectedModuleReducer = (selected_module = {}, action) => {\n  switch (action.type) {\n    case SELECT_MODULE:\n      return action.module;\n    default:\n      return selected_module;\n  }\n};","import React from 'react';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheck, faEdit} from \"@fortawesome/free-solid-svg-icons\";\nimport ModuleService from \"../../../../services/ModuleService\";\nimport {select_module} from \"../../../../store/SelectedModuleReducer\";\nimport {delete_module, update_module} from \"../../../../store/ModuleReducer\";\nimport connect from \"react-redux/es/connect/connect\";\n\nclass ModuleRowComponent extends React.Component {\n  state = {\n    editing: false,\n    newModuleTitle: this.props.module.name,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state === prevState && this.state.newModuleTitle !== this.props.module.name) {\n      this.setState({newModuleTitle: this.props.module.name})\n    }\n  }\n\n  toggleEditing = () => {\n    this.setState({editing: !this.state.editing})\n  };\n\n  saveEdit = () => {\n    if (this.state.newModuleTitle !== this.props.module.name) {\n      const newModule = {...this.props.module, name: this.state.newModuleTitle};\n      ModuleService.updateModule(this.props.module._id, newModule)\n      .then(actualModule => this.props.updateModule(newModule));\n    }\n    this.toggleEditing();\n  };\n\n  removeModule = () => {\n    ModuleService.deleteModule(this.props.module._id)\n    .then(response => this.props.removeModule(this.props.module._id));\n    ModuleService.findModulesForCourse(this.props.selected_course._id)\n    .then(modules => {\n      const newSelectedModule = modules.length > 0 ? modules[0] : {};\n      this.props.selectModule(newSelectedModule);\n    });\n  };\n\n  render() {\n    return (\n        <li\n            key={this.props.key}\n            className={this.props.module._id === this.props.selected_module._id\n                || this.state.editing\n                ?\n                'list-group-item wbdv-module-item wbdv-module-selected' :\n                'list-group-item wbdv-module-item'}\n            onClick={() => this.props.selectModule(this.props.module)}\n        >\n          <div>{this.state.editing ?\n              <input\n                  className=\"wbdv-field\"\n                  onChange={(event) => this.setState({\n                    newModuleTitle: event.target.value\n                  })}\n                  value={this.state.newModuleTitle}/>\n              :\n              this.props.module.name}</div>\n          <div>\n            {this.state.editing ?\n                <button\n                    className='wbdv-icon-link wbdv-btn'\n                    onClick={this.saveEdit}>\n                  <FontAwesomeIcon\n                      className=\"wbdv-icon-link\"\n                      icon={faCheck}/>\n                </button>\n                :\n                <button\n                    className='wbdv-icon-link wbdv-btn'\n                    onClick={this.toggleEditing}>\n                  <FontAwesomeIcon\n                      className=\"wbdv-icon-link\"\n                      icon={faEdit}/>\n                </button>\n            }\n            {this.state.editing ?\n                <button\n                    className=\"wbdv-icon-link wbdv-delete-btn wbdv-btn\"\n                    onClick={this.toggleEditing}\n                >\n                  X\n                </button>\n                :\n                <button\n                    className=\"wbdv-icon-link wbdv-delete-btn wbdv-btn\"\n                    onClick={this.removeModule}>\n                  X\n                </button>\n            }\n\n          </div>\n        </li>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_module: state.selected_module,\n  selected_course: state.selected_course,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectModule: (module) => dispatch(select_module(module)),\n  updateModule: (module) => dispatch(update_module(module)),\n  removeModule: (moduleId) => dispatch(delete_module(moduleId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleRowComponent);","// Actions\nexport const SET_LESSONS = 'SET_LESSONS';\nexport const CREATE_LESSON = 'CREATE_LESSON';\nexport const FIND_LESSONS_FOR_COURSE = 'FIND_LESSONS_FOR_COURSE';\nexport const FIND_LESSON = 'FIND_LESSON';\nexport const UPDATE_LESSON = 'UPDATE_LESSON';\nexport const DELETE_LESSON = 'DELETE_LESSON';\n\n// Action creators\nexport const set_lessons = (lessons) => {\n  return {type: SET_LESSONS, lessons}\n};\n\nexport const create_lesson = (lesson) => {\n  return {type: CREATE_LESSON, lesson}\n};\n\nexport const find_lessons_for_module = (moduleId) => {\n  return {type: FIND_LESSONS_FOR_COURSE, moduleId}\n};\n\nexport const find_lesson = (lessonId) => {\n  return {type: FIND_LESSON, lessonId}\n};\n\nexport const update_lesson = (lesson) => {\n  return {type: UPDATE_LESSON, lesson}\n};\n\nexport const delete_lesson = (lessonId) => {\n  return {type: DELETE_LESSON, lessonId}\n};\n\n// Reducers\nexport const lessonReducer = (lessons = [], action) => {\n  switch(action.type) {\n    case SET_LESSONS:\n      return action.lessons;\n    case CREATE_LESSON:\n      return [...lessons, action.lesson];\n    case FIND_LESSONS_FOR_COURSE:\n      return lessons.filter(lesson => lesson.moduleId === action.moduleId);\n    case FIND_LESSON:\n      return lessons.find(lesson => lesson._id === action.lessonId);\n    case UPDATE_LESSON:\n      return [...lessons].map(lesson =>\n          lesson._id === action.lesson._id ? action.lesson : lesson);\n    case DELETE_LESSON:\n      return lessons.filter(lesson => lesson._id !== action.lessonId);\n    default:\n      return lessons;\n  }\n};","import React from \"react\"\nimport { connect } from 'react-redux'\nimport {create_module, delete_module} from \"../../../store/ModuleReducer\";\nimport ModuleService from \"../../../services/ModuleService\";\nimport ModuleRowComponent from './ModuleRow/ModuleRowComponent';\nimport '../../../styles.css';\nimport './ModuleListComponent.css';\nimport LessonService from \"../../../services/LessonService\";\nimport {set_lessons} from \"../../../store/LessonReducer\";\n\nclass ModuleListComponent extends React.Component {\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.selected_module !== prevProps.selected_module) {\n      LessonService.findLessonsForModule(this.props.selected_module._id)\n      .then(actualLessons => this.props.loadLessons(actualLessons));\n    }\n  }\n\n  addModule = () => {\n    const module = {\n      name: 'New Module',\n      courseId: this.props.courseId\n    };\n    ModuleService.createModule(this.props.courseId, module)\n    .then(actualModule => this.props.addModule(actualModule));\n  };\n\n  moduleRow = (module, index) => (\n    <ModuleRowComponent module={module} key={index}/>\n  );\n\n\n  render() {\n    return(\n      <div>\n        <div className=\"wbdv-module-list-header\">\n          <div>Modules</div>\n          <button\n              className=\"wbdv-icon-link wbdv-btn\"\n              onClick={this.addModule}\n          >+</button>\n        </div>\n\n        <ul className=\"list-group wbdv-module-list\">\n          {this.props.modules.map(this.moduleRow)}\n        </ul>\n      </div>\n  )}\n}\n\nconst mapStateToProps = (state) => ({\n  selected_module: state.selected_module,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadLessons: (lessons) => dispatch(set_lessons(lessons)),\n  addModule: (module) => dispatch(create_module(module)),\n  removeModule: (moduleId) => dispatch(delete_module(moduleId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModuleListComponent);","import React from \"react\";\nimport '../../../../styles.css';\nimport './LessonTabsComponent.css';\n\nconst LessonTabsComponent = (props) => {\n  return (\n      <li\n          className={props.selected === props.tab\n              ? \"nav-item wbdv-navbar-content-item wbdv-selected-tab\"\n              : \"nav-item wbdv-navbar-content-item\"}\n          onClick={() => props.selectTab(props.tab)}\n      >\n        <button className=\"nav-link wbdv-btn\">\n          {props.tab}\n        </button>\n      </li>\n  );\n};\n\nexport default LessonTabsComponent;","// Actions\nexport const SELECT_TOPIC = 'SELECT_TOPIC';\n\n// Action creators\nexport const select_topic = (topic) => {\n  return { type: SELECT_TOPIC, topic }\n};\n\n// Reducer\nexport const selectedTopicReducer = (selected_topic = {}, action) => {\n  switch (action.type) {\n    case SELECT_TOPIC:\n      return action.topic;\n    default:\n      return selected_topic;\n  }\n};","// Actions\nexport const SELECT_LESSON = 'SELECT_LESSON';\n\n// Action creators\nexport const select_lesson = (lesson) => {\n  return { type: SELECT_LESSON, lesson }\n};\n\n// Reducer\nexport const selectedLessonReducer = (selected_lesson = {}, action) => {\n  switch (action.type) {\n    case SELECT_LESSON:\n      return action.lesson;\n    default:\n      return selected_lesson;\n  }\n};","// Actions\nexport const SET_TOPICS = 'SET_TOPICS';\nexport const CREATE_TOPIC = 'CREATE_TOPIC';\nexport const FIND_TOPICS_FOR_LESSON = 'FIND_TOPICS_FOR_LESSON';\nexport const FIND_TOPIC = 'FIND_TOPIC';\nexport const UPDATE_TOPIC = 'UPDATE_TOPIC';\nexport const DELETE_TOPIC = 'DELETE_TOPIC';\n\n// Action creators\nexport const set_topics = (topics) => {\n  return {type: SET_TOPICS, topics}\n};\n\nexport const create_topic = (topic) => {\n  return {type: CREATE_TOPIC, topic}\n};\n\nexport const find_topics_for_lesson = (lessonId) => {\n  return {type: FIND_TOPICS_FOR_LESSON, lessonId}\n};\n\nexport const find_topic = (topicId) => {\n  return {type: FIND_TOPIC, topicId}\n};\n\nexport const update_topic = (topic) => {\n  return {type: UPDATE_TOPIC, topic}\n};\n\nexport const delete_topic = (topicId) => {\n  return {type: DELETE_TOPIC, topicId}\n};\n\n// Reducers\nexport const topicReducer = (topics = [], action) => {\n  switch(action.type) {\n    case SET_TOPICS:\n      return action.topics;\n    case CREATE_TOPIC:\n      return [...topics, action.topic];\n    case FIND_TOPICS_FOR_LESSON:\n      return topics.filter(topic => topic.lessonId === action.lessonId);\n    case FIND_TOPIC:\n      return topics.find(topic => topic._id === action.topicId);\n    case UPDATE_TOPIC:\n      return [...topics].map(topic =>\n          topic._id === action.topic._id ? action.topic : topic);\n    case DELETE_TOPIC:\n      return topics.filter(topic => topic._id !== action.topicId);\n    default:\n      return topics;\n  }\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowCircleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport LessonTabsComponent from \"./LessonTabs/LessonTabsComponent\";\nimport '../../../styles.css';\nimport './EditorNavbarComponent.css';\nimport {select_module} from \"../../../store/SelectedModuleReducer\";\nimport {select_topic} from \"../../../store/SelectedTopicReducer\";\nimport {select_lesson} from \"../../../store/SelectedLessonReducer\";\nimport {set_modules} from \"../../../store/ModuleReducer\";\nimport {set_lessons} from \"../../../store/LessonReducer\";\nimport {set_topics} from \"../../../store/TopicReducer\";\n\nclass EditorNavbarComponent extends React.Component {\n  lessonTabsComponent = (tab, index) => (\n    <LessonTabsComponent\n        key={index}\n        tab={tab}\n        selected={this.props.currentTab}\n        selectTab={this.props.selectTab}\n    />\n  );\n\n  render() {\n    return(\n        <nav className=\"navbar navbar-light wbdv-editor-main-navbar\">\n          <div>\n            <Link to=\"/courses/\" onClick={() => {\n              this.props.clearSelectedModule();\n              this.props.clearSelectedLesson();\n              this.props.clearSelectedTopic();\n              this.props.clearModules();\n              this.props.clearLessons();\n              this.props.clearTopics();\n            }}>\n              <FontAwesomeIcon\n                  className='wbdv-course-editor wbdv-back-btn wbdv-icon-link'\n                  icon={faArrowCircleLeft}\n              />\n            </Link>\n            <div className=\"navbar-brand\">\n              {this.props.title}\n            </div>\n          </div>\n\n\n          <ul className=\"wbdv-navbar-content navbar-nav\">\n            {this.props.tabs.map(this.lessonTabsComponent)}\n            <li className=\"nav-item wbdv-navbar-content-item\">\n              <button\n                  className=\"nav-link wbdv-icon-link wbdv-btn\"\n                  onClick={this.props.addTab}\n              >\n                +\n              </button>\n            </li>\n          </ul>\n        </nav>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearSelectedModule: () => dispatch(select_module({})),\n  clearSelectedLesson: () => dispatch(select_lesson({})),\n  clearSelectedTopic: () => dispatch(select_topic({})),\n  clearModules: () => dispatch(set_modules([])),\n  clearLessons: () => dispatch(set_lessons([])),\n  clearTopics: () => dispatch(set_topics([])),\n});\n\nexport default connect(null, mapDispatchToProps)(EditorNavbarComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport { select_lesson } from \"../../../store/SelectedLessonReducer\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faEdit, faCheck, faTrash, faTimes} from '@fortawesome/free-solid-svg-icons';\nimport './LessonTabComponent.css';\nimport LessonService from \"../../../services/LessonService\";\nimport {delete_lesson, update_lesson} from \"../../../store/LessonReducer\";\n\nclass LessonTabComponent extends React.Component {\n  state = {\n    editing: false,\n    newLessonName: this.props.lesson.name\n  };\n  \n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state === prevState\n    && (this.state.newLessonName !== this.props.lesson.name)) {\n      this.setState({newLessonName: this.props.lesson.name})\n    }\n  }\n\n  toggleEditing = () => {\n    this.setState({editing: !this.state.editing})\n  };\n\n  saveEdit = () => {\n    if (this.state.newLessonName !== this.props.lesson.name) {\n      const newLesson = {...this.props.lesson, name: this.state.newLessonName};\n      LessonService.updateLesson(this.props.lesson._id, newLesson)\n      .then(actualLesson => this.props.updateLesson(newLesson));\n    }\n    this.toggleEditing();\n  };\n\n  removeLesson = () => {\n    LessonService.deleteLesson(this.props.lesson._id)\n    .then(response => this.props.removeLesson(this.props.lesson._id));\n    this.toggleEditing();\n  };\n\n  render() {\n    return (\n        <li\n            key={this.props.key}\n            className=\"nav-item\"\n            onClick={() => this.props.selectLesson(this.props.lesson)}\n        >\n          <div className={this.props.selected_lesson._id === this.props.lesson._id\n              ? \"nav-link wbdv-lesson-pill active lesson-selected\"\n              : \"nav-link wbdv-lesson-pill\"\n          }\n          >\n            {this.state.editing ?\n                <div>\n                  <input\n                      className=\"wbdv-field wbdv-lesson-name-input\"\n                      onChange={(event) => this.setState({\n                        newLessonName: event.target.value\n                      })}\n                      value={this.state.newLessonName}/>\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-lesson-btn'\n                      icon={faCheck}\n                      onClick={this.saveEdit}\n                  />\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-lesson-btn wbdv-delete-btn'\n                      icon={faTimes}\n                      onClick={this.toggleEditing}\n                  />\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-lesson-btn wbdv-delete-btn'\n                      icon={faTrash}\n                      onClick={this.removeLesson}\n                  />\n                </div>\n                :\n                <div>\n                  {this.props.lesson.name}\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-lesson-btn'\n                      icon={faEdit}\n                      onClick={this.toggleEditing}\n                  />\n                </div>\n            }\n          </div>\n        </li>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_lesson: state.selected_lesson\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectLesson: (lesson) => dispatch(select_lesson(lesson)),\n  removeLesson: (lesson) => dispatch(delete_lesson(lesson)),\n  updateLesson: (lesson) => dispatch(update_lesson(lesson)),\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonTabComponent);","const isEmpty = (obj) => Object.keys(obj).length === 0;\n\nexport default {\n  isEmpty\n}","import React from \"react\";\nimport connect from \"react-redux/es/connect/connect\";\nimport {select_topic} from \"../../../../store/SelectedTopicReducer\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faEdit,\n  faTimes,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\nimport TopicService from '../../../../services/TopicService';\nimport {delete_topic, update_topic} from \"../../../../store/TopicReducer\";\n\nimport './TopicPillsComponent.css';\nimport './TopicPillComponent.css';\n\nclass TopicPillComponent extends React.Component {\n  state = {\n    editing: false,\n    newTopicName: this.props.topic.name,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state === prevState\n        && (this.state.newTopicName !== this.props.topic.name)) {\n      this.setState({newTopicName: this.props.topic.name})\n    }\n  }\n\n  toggleEditing = () => {\n    this.setState({editing: !this.state.editing})\n  };\n\n  saveEdit = () => {\n    if (this.state.newTopicName !== this.props.topic.name) {\n      const newTopic = {...this.props.topic, name: this.state.newTopicName};\n      TopicService.updateTopic(this.props.topic._id, newTopic)\n      .then(actualTopic => this.props.updateTopic(newTopic));\n    }\n    this.toggleEditing();\n  };\n\n  removeTopic = () => {\n    TopicService.deleteTopic(this.props.topic._id)\n    .then(response => this.props.removeTopic(this.props.topic._id));\n    this.toggleEditing();\n  };\n\n  render() {\n    return (\n        <li\n            className=\"nav-item wbdv-topic-pill-nav-item\"\n            onClick={() => this.props.selectTopic(this.props.topic)}\n        >\n          <div className={this.props.selected_topic._id === this.props.topic._id\n              ? \"nav-link wbdv-topic-pill active topic-selected\"\n              : \"nav-link wbdv-topic-pill\"\n          }\n          >\n            {this.state.editing ?\n                <div className='wbdv-topic-pill'>\n                  <input\n                      className=\"wbdv-field wbdv-topic-name-input\"\n                      onChange={(event) => this.setState({\n                        newTopicName: event.target.value\n                      })}\n                      value={this.state.newTopicName}/>\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-topic-btn'\n                      icon={faCheck}\n                      onClick={this.saveEdit}\n                  />\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-topic-btn wbdv-delete-btn'\n                      icon={faTimes}\n                      onClick={this.toggleEditing}\n                  />\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-topic-btn wbdv-delete-btn'\n                      icon={faTrash}\n                      onClick={this.removeTopic}\n                  />\n                </div>\n                :\n                <div>\n                  {this.props.topic.name}\n                  <FontAwesomeIcon\n                      className='wbdv-icon-link wbdv-topic-btn'\n                      icon={faEdit}\n                      onClick={this.toggleEditing}\n                  />\n                </div>\n            }\n          </div>\n        </li>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_topic: state.selected_topic,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectTopic: (topic) => dispatch(select_topic(topic)),\n  removeTopic: (topic) => dispatch(delete_topic(topic)),\n  updateTopic: (topic) => dispatch(update_topic(topic)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPillComponent);","const WidgetTypes = [\n  {value: 'HEADING', display: 'Heading'},\n  {value: 'PARAGRAPH', display: 'Paragraph'},\n];\n\nexport default WidgetTypes;","import {herokuUrl} from '../config';\n\nconst createWidget = (topicId, widget) =>\n    fetch(`${herokuUrl}/topics/${topicId}/widgets`, {\n      method: 'POST',\n      body: JSON.stringify(widget),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst findWidgetsForTopic = (topicId) =>\n    fetch(`${herokuUrl}/topics/${topicId}/widgets`)\n    .then(response => response.json());\n\nconst findWidget = (widgetId) =>\n    fetch(`${herokuUrl}/widgets/${widgetId}`)\n    .then(response => response.json());\n\nconst updateWidget = (widgetId, widget) =>\n    fetch(`${herokuUrl}/widgets/${widgetId}`, {\n      method: 'PUT',\n      body: JSON.stringify(widget),\n      headers: {'content-type': 'application/json'}\n    }).then(response => response.json());\n\nconst deleteWidget = (widgetId) =>\n    fetch(`${herokuUrl}/widgets/${widgetId}`, {method: 'DELETE'})\n    .then(response => response.json());\n\nconst reorderUp = (widgetId) =>\n    fetch(`${herokuUrl}/widgets/${widgetId}/reorderUp`)\n    .then(response => response.json());\n\nconst reorderDown = (widgetId) =>\n    fetch(`${herokuUrl}/widgets/${widgetId}/reorderDown`)\n    .then(response => response.json());\n\nexport default {\n  createWidget,\n  findWidgetsForTopic,\n  findWidget,\n  updateWidget,\n  deleteWidget,\n  reorderUp,\n  reorderDown,\n}","// Actions\nexport const SET_WIDGETS = 'SET_WIDGETS';\nexport const CREATE_WIDGET = 'CREATE_WIDGET';\nexport const FIND_WIDGETS_FOR_TOPIC = 'FIND_WIDGETS_FOR_TOPIC';\nexport const FIND_WIDGET = 'FIND_WIDGET';\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\n\n// Action creators\nexport const set_widgets = (widgets) => {\n  return {type: SET_WIDGETS, widgets}\n};\n\nexport const create_widget = (widget) => {\n  return {type: CREATE_WIDGET, widget}\n};\n\nexport const find_widgets_for_topic = (topicId) => {\n  return {type: FIND_WIDGETS_FOR_TOPIC, topicId}\n};\n\nexport const find_widget = (widgetId) => {\n  return {type: FIND_WIDGET, widgetId}\n};\n\nexport const update_widget = (widget) => {\n  return {type: UPDATE_WIDGET, widget}\n};\n\nexport const delete_widget = (widgetId) => {\n  return {type: DELETE_WIDGET, widgetId}\n};\n\n// Reducers\nexport const widgetReducer = (widgets = [], action) => {\n  switch(action.type) {\n    case SET_WIDGETS:\n      return action.widgets;\n    case CREATE_WIDGET:\n      return [...widgets, action.widget];\n    case FIND_WIDGETS_FOR_TOPIC:\n      return widgets.filter(widget => widget.topicId === action.topicId);\n    case FIND_WIDGET:\n      return widgets.find(widget => widget._id === action.widgetId);\n    case UPDATE_WIDGET:\n      return [...widgets].map(widget =>\n          widget._id === action.widget._id ? action.widget : widget);\n    case DELETE_WIDGET:\n      return widgets.filter(widget => widget._id !== action.widgetId);\n    default:\n      return widgets;\n  }\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport WidgetTypes from './WidgetTypes';\nimport '../../../../../../styles.css';\nimport './WidgetStyles.css';\nimport './WidgetFormComponent.css'\nimport WidgetService from \"../../../../../../services/WidgetService\";\nimport {update_widget} from \"../../../../../../store/WidgetReducer\";\n\nclass WidgetFormComponent extends React.Component {\n  updateWidgetType(type) {\n    WidgetService.updateWidget(this.props.selected_widget._id,\n        {...this.props.selected_widget, type})\n    .then(updatedWidget => {\n      this.props.updateWidget(updatedWidget);\n    })\n  }\n\n  updateWidgetName(name) {\n    if (name !== '') {\n      WidgetService.updateWidget(this.props.selected_widget._id,\n          {...this.props.selected_widget, name})\n      .then(updatedWidget => {\n        this.props.updateWidget(updatedWidget);\n      })\n    }\n  }\n\n  render() {\n    return (\n        <form className='wbdv-widget-form'>\n          <div className=\"form-group wbdv-widget-edit-row\">\n            <label className=\"col-form-label wbdv-widget-input-label\"\n                   htmlFor=\"widget-name-input\">\n              Widget name:\n            </label>\n            <input\n                onBlur={(e) => this.updateWidgetName(e.target.value)}\n                className=\"wbdv-widget-input-field wbdv-field col\"\n                id=\"widget-name-input\"\n                type=\"text\"\n                placeholder=\"Widget name\"\n            />\n          </div>\n          <div className=\"form-group wbdv-widget-edit-row\">\n            <label className=\"col-form-label wbdv-widget-input-label\">\n              Widget type:\n            </label>\n            <select\n                className=\"wbdv-widget-input-field wbdv-field col\"\n                onChange={(e) => this.updateWidgetType(e.target.value)}\n                defaultValue={this.props.selected_widget.type}\n            >\n              {WidgetTypes.map((type) =>\n                  <option key={type.value} value={type.value}>\n                    {type.display}\n                  </option>)}\n            </select>\n          </div>\n        </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_widget: state.selected_widget,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateWidget: (widget) => dispatch(update_widget(widget)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    WidgetFormComponent);","import React from 'react';\nimport WidgetFormComponent from \"./WidgetFormComponent\";\nimport '../../../../../../styles.css';\nimport './HeadingWidgetComponent.css';\nimport './WidgetStyles.css';\nimport connect from \"react-redux/es/connect/connect\";\nimport WidgetService from \"../../../../../../services/WidgetService\";\nimport {update_widget} from \"../../../../../../store/WidgetReducer\";\n\nclass HeadingWidgetComponent extends React.Component {\n\n  state = {\n    text: this.props.widget.text || 'Put your heading text here',\n  };\n\n  updateHeadingSize = (size) => {\n    WidgetService.updateWidget(this.props.widget._id,\n        {...this.props.widget, size})\n    .then(updatedWidget => this.props.updateWidget(updatedWidget));\n  };\n\n  updateHeadingText = () => {\n    WidgetService.updateWidget(this.props.widget._id,\n        {...this.props.widget, text: this.state.text})\n    .then(updatedWidget => this.props.updateWidget(updatedWidget));\n  };\n\n  generatePreview = (size, text) => {\n    switch(this.props.widget.size) {\n      case 2:\n        return <h2>{text}</h2>;\n      case 3:\n        return <h3>{text}</h3>;\n      case 4:\n        return <h4>{text}</h4>;\n      case 5:\n        return <h5>{text}</h5>;\n      case 6:\n        return <h6>{text}</h6>;\n      default:\n        return <h1>{text}</h1>;\n    }\n  };\n\n  render() {\n    const name = this.props.widget.name;\n    return (\n        this.props.active &&\n        <div\n            id={name}\n            className=\"wbdv-widget-body\"\n        >\n          {!this.props.widget_preview &&\n          <div>\n            <WidgetFormComponent/>\n            <form className=\"wbdv-widget-edit\">\n              <div className=\"wbdv-widget-type\">Heading widget</div>\n              <div className=\"wbdv-widget-edit-row\">\n                <label className=\"col-form-label wbdv-widget-input-label\"\n                       htmlFor=\"heading-body-input\">\n                  Heading text:\n                </label>\n                <input\n                    className=\"wbdv-widget-input-field wbdv-field col\"\n                    type=\"text\"\n                    placeholder=\"Put your heading text here\"\n                    onChange={(e) => this.setState({text: e.target.value})}\n                    onBlur={this.updateHeadingText}\n                    defaultValue={this.state.text}\n                />\n              </div>\n              <div className='wbdv-widget-edit-row'>\n                <label\n                    className=\"col-form-label wbdv-widget-input-label\"\n                    htmlFor='size-dropdown'\n                >\n                  Size:\n                </label>\n                <select\n                    id='size-dropdown'\n                    className='wbdv-widget-input-field wbdv-field'\n                    onChange={(e) => this.updateHeadingSize(e.target.value)}\n                    defaultValue={this.props.widget.size || 1}\n                >\n                  <option value='1'>Heading 1</option>\n                  <option value='2'>Heading 2</option>\n                  <option value='3'>Heading 3</option>\n                  <option value='4'>Heading 4</option>\n                  <option value='5'>Heading 5</option>\n                  <option value='6'>Heading 6</option>\n                </select>\n              </div>\n            </form>\n            <h5>Widget Preview:</h5>\n          </div>\n          }\n          <div className=\"wbdv-widget-preview\">\n            {this.generatePreview(this.props.widget.size, this.state.text)}\n          </div>\n        </div>\n    )\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  widget_preview: state.widget_preview,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateWidget: (widget) => dispatch(update_widget(widget)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    HeadingWidgetComponent);","import React from 'react';\nimport {connect} from 'react-redux';\nimport WidgetFormComponent from \"./WidgetFormComponent\";\nimport '../../../../../../styles.css';\nimport './WidgetStyles.css';\nimport './ParagraphWidgetComponent.css';\nimport WidgetService from \"../../../../../../services/WidgetService\";\n\nclass ParagraphWidgetComponent extends React.Component {\n  node = React.createRef();\n\n  state = {\n    text: this.props.widget.text || 'Paragraph text',\n  };\n\n  componentDidUpdate() {\n    if (this.node &&\n        this.node.current &&\n        this.node.current.innerText !== this.state.text) {\n      this.node.current.innerText = this.state.text;\n    }\n  }\n\n  saveText = () => {\n    WidgetService.updateWidget(this.props.widget._id,\n        {...this.props.widget, text: this.state.text});\n  };\n\n  render() {\n    const name = this.props.widget.name;\n    return (\n        this.props.active &&\n        <div\n            id={name}\n            className=\"wbdv-widget-body\"\n        >\n          {!this.props.widget_preview &&\n          <div>\n            <WidgetFormComponent/>\n            <form className=\"wbdv-widget-edit\">\n              <div className=\"wbdv-widget-type\">Paragraph widget</div>\n              <div className='wbdv-paragraph-input-wrapper'>\n                <div\n                    contentEditable\n                    ref={this.node}\n                    className=\"wbdv-paragraph-input-field wbdv-field col\"\n                    type=\"text\"\n                    onInput={(e) => this.setState(\n                        {text: e.target.innerText})}\n                    onBlur={this.saveText}\n                />\n              </div>\n            </form>\n            <h4>Widget Preview:</h4>\n          </div>\n          }\n          <div className=\"wbdv-widget-preview\">\n            <p className='wbdv-paragraph-preview'>\n              {this.state.text}\n            </p>\n          </div>\n        </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  widget_preview: state.widget_preview,\n});\n\nexport default connect(mapStateToProps, null)(ParagraphWidgetComponent);","// Actions\nexport const SELECT_WIDGET = 'SELECT_WIDGET';\n\n// Action creators\nexport const select_widget = (widget) => {\n  return { type: SELECT_WIDGET, widget }\n};\n\n// Reducer\nexport const selectedWidgetReducer = (selected_widget = {}, action) => {\n  switch (action.type) {\n    case SELECT_WIDGET:\n      return action.widget;\n    default:\n      return selected_widget;\n  }\n};","import React from 'react';\nimport {connect} from 'react-redux';\nimport '../../../../../styles.css';\nimport './WidgetListComponent.css';\nimport HeadingWidgetComponent from \"./Widgets/HeadingWidgetComponent\";\nimport ParagraphWidgetComponent from \"./Widgets/ParagraphWidgetComponent\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowDown, faArrowUp} from \"@fortawesome/free-solid-svg-icons\";\nimport {select_widget} from \"../../../../../store/SelectedWidgetReducer\";\nimport WidgetService from \"../../../../../services/WidgetService\";\nimport {delete_widget, set_widgets} from \"../../../../../store/WidgetReducer\";\n\nclass WidgetListComponent extends React.Component {\n  deleteWidget = (widget) => {\n    WidgetService.deleteWidget(widget._id)\n    .then(response => this.props.deleteWidget(widget._id));\n  };\n\n  reorderUp = (widget) => WidgetService.reorderUp(widget._id)\n  .then(newWidgets => this.props.setWidgets(newWidgets));\n\n  reorderDown = (widget) => WidgetService.reorderDown(widget._id)\n  .then(newWidgets => this.props.setWidgets(newWidgets));\n\n  createWidget = (widget, index) => {\n    return (\n        <div\n            className=\"card\"\n            key={index}\n        >\n          <div\n              className=\"card-header wbdv-widget-heading-bar\"\n              onClick={() => this.props.selectWidget(\n                  this.props.selected_widget._id === widget._id ? {} : widget)}\n          >\n            {widget.name}\n            <div>\n              <div className=\"btn-group\">\n                {widget.widgetOrder !== 0 &&\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() => this.reorderUp(widget)}\n                >\n                  <FontAwesomeIcon icon={faArrowUp}/>\n                </button>\n                }\n                {widget.widgetOrder !== this.props.widgets.length - 1 &&\n                <button\n                    className=\"btn btn-light\"\n                    onClick={() => this.reorderDown(widget)}\n                >\n                  <FontAwesomeIcon icon={faArrowDown}/>\n                </button>\n                }\n              </div>\n              <button\n                  className=\"wbdv-icon-link wbdv-btn wbdv-delete-btn\"\n                  onClick={() => this.deleteWidget(widget)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n          {this.widgetType(widget)}\n        </div>);\n  };\n\n  widgetType = (widget) => {\n    if (widget.type === 'HEADING') {\n      return this.createHeadingWidget(widget);\n    } else if (widget.type === 'PARAGRAPH') {\n      return this.createParagraphWidget(widget);\n    }\n  };\n\n  createHeadingWidget = (widget) =>\n      <HeadingWidgetComponent\n          widget={widget}\n          active={this.props.selected_widget._id === widget._id}\n      />;\n\n  createParagraphWidget = (widget) =>\n      <ParagraphWidgetComponent\n          widget={widget}\n          active={this.props.selected_widget._id === widget._id}\n      />;\n\n  render() {\n    return (\n        <div className=\"accordion\" id=\"widget-accordion\">\n          {this.props.widgets.map(this.createWidget)}\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_widget: state.selected_widget,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  selectWidget: (widget) => dispatch(select_widget(widget)),\n  deleteWidget: (widget) => dispatch(delete_widget(widget)),\n  setWidgets: (widgets) => dispatch(set_widgets(widgets)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n    WidgetListComponent);\n","// Actions\nexport const TOGGLE_WIDGET_PREVIEW = 'TOGGLE_WIDGET_PREVIEW';\n\n// Action creators\nexport const toggle_widget_preview = () => {\n  return {type: TOGGLE_WIDGET_PREVIEW}\n};\n\n// Reducer\nexport const widgetPreviewReducer = (widgetPreview = false, action) => {\n  switch(action.type) {\n    case TOGGLE_WIDGET_PREVIEW:\n      return !widgetPreview;\n    default:\n      return widgetPreview;\n  }\n};","import React from 'react';\nimport WidgetListComponent\n  from \"../../../../components/CourseEditor/LessonView/TopicPills/WidgetList/WidgetListComponent\";\nimport './WidgetContainer.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOff, faToggleOn } from '@fortawesome/free-solid-svg-icons';\nimport connect from \"react-redux/es/connect/connect\";\nimport WidgetService from \"../../../../services/WidgetService\";\nimport {create_widget} from \"../../../../store/WidgetReducer\";\nimport Utils from \"../../../../utils/Utils\";\nimport {toggle_widget_preview} from \"../../../../store/WidgetPreviewReducer\";\n\nclass WidgetContainer extends React.Component {\n\n  addWidget = () => {\n    if (!Utils.isEmpty(this.props.selected_topic)) {\n      WidgetService.createWidget(this.props.selected_topic._id,\n          {\n            name: 'New Widget',\n            type: 'HEADING',\n            topicId: this.props.selected_topic._id,\n          })\n      .then(newWidget => this.props.addWidget(newWidget))\n    }\n  };\n\n  render() {\n    return(\n        <div className=\"wbdv-topic-content\">\n          <div className=\"wbdv-section-header\">\n            <div>Widgets</div>\n            <div>\n              <span className='wbdv-widget-preview-label'>Preview mode:</span>\n              <FontAwesomeIcon\n                  className='wbdv-icon-link wbdv-widget-preview-toggle'\n                  icon={this.props.widget_preview ? faToggleOn : faToggleOff}\n                  onClick={this.props.toggleWidgetPreview}\n              />\n              <button\n                  className=\"wbdv-btn wbdv-icon-link\"\n                  onClick={this.addWidget}\n              >\n                +\n              </button>\n            </div>\n          </div>\n          <WidgetListComponent\n              widgets={this.props.widgets}\n          />\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_topic: state.selected_topic,\n  selected_widget: state.selected_widget,\n  widget_preview: state.widget_preview,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addWidget: (widget) => dispatch(create_widget(widget)),\n  toggleWidgetPreview: () => dispatch(toggle_widget_preview()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WidgetContainer);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {create_topic} from \"../../../../store/TopicReducer\";\nimport {select_topic} from \"../../../../store/SelectedTopicReducer\";\nimport TopicPillComponent from \"./TopicPillComponent\";\nimport TopicService from '../../../../services/TopicService';\nimport WidgetContainer\n  from \"../../../../containers/CourseEditor/LessonView/WidgetContainer/WidgetContainer\";\nimport Utils from '../../../../utils/Utils';\nimport WidgetService from \"../../../../services/WidgetService\";\nimport {set_widgets} from \"../../../../store/WidgetReducer\";\n\nclass TopicPillsComponent extends React.Component {\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.topics !== prevProps.topics) {\n      this.props.selectTopic(this.props.topics.length > 0\n          ? this.props.topics[0] : {});\n    }\n\n    if (!Utils.isEmpty(this.props.selected_topic)\n        && this.props.selected_topic !== prevProps.selected_topic) {\n      WidgetService.findWidgetsForTopic(this.props.selected_topic._id)\n      .then(actualWidgets => this.props.setWidgets(actualWidgets))\n    }\n  }\n\n  createTopic = () => {\n    const topic = {\n      lessonId: this.props.selected_lesson._id,\n      name: 'New Topic',\n    };\n    TopicService.createTopic(this.props.selected_lesson._id, topic)\n    .then(actualTopic => this.props.addTopic(actualTopic));\n  };\n\n  topicPill = (topic, index) => {\n    return (\n        <TopicPillComponent key={index} topic={topic}/>\n    )\n  };\n\n  render() {\n    return (\n        <div>\n          <ul className=\"nav nav-tabs topic-navbar wbdv-topic-pill-list\">\n            {this.props.topics.map(this.topicPill)}\n            <li className=\"nav-item\">\n              <div\n                  className=\"nav-link topic-link wbdv-icon-link wbdv-topic-add-btn wbdv-topic-pill\"\n                  onClick={this.createTopic}\n              >\n                +\n              </div>\n            </li>\n          </ul>\n          {!Utils.isEmpty(this.props.selected_topic)\n          && <WidgetContainer\n              widgets={this.props.widgets.filter((widget) =>\n                  widget.topicId === this.props.selected_topic._id)}\n          />}\n        </div>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  selected_topic: state.selected_topic,\n  selected_lesson: state.selected_lesson,\n  widgets: state.widgets,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addTopic: (topic) => dispatch(create_topic(topic)),\n  selectTopic: (topic) => dispatch(select_topic(topic)),\n  setWidgets: (widgets) => dispatch(set_widgets(widgets)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicPillsComponent);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { create_lesson } from \"../../../store/LessonReducer\";\nimport { set_topics } from \"../../../store/TopicReducer\";\nimport { select_lesson } from \"../../../store/SelectedLessonReducer\";\nimport LessonService from '../../../services/LessonService';\nimport TopicService from \"../../../services/TopicService\";\nimport LessonTabComponent from \"./LessonTabComponent\";\nimport Utils from '../../../utils/Utils';\nimport TopicPillsComponent from \"./TopicPills/TopicPillsComponent\";\n\nclass LessonTabsComponent extends React.Component {\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.selected_module !== prevProps.selected_module) {\n      LessonService.findLessonsForModule(this.props.selected_module._id)\n      .then(lessons => {\n        const newSelectedLesson = lessons.length > 0 ? lessons[0] : {};\n        this.props.selectLesson(newSelectedLesson);\n      })\n    }\n\n    if (this.props.selected_lesson !== prevProps.selected_lesson) {\n      TopicService.findTopicsForLesson(this.props.selected_lesson._id)\n      .then(actualLessons => this.props.loadTopics(actualLessons));\n    }\n  }\n\n  createLesson = () => {\n    const lesson = {\n      name: 'New Lesson',\n      moduleId: this.props.selected_module._id,\n    };\n    LessonService.createLesson(this.props.selected_module._id, lesson)\n    .then(actualLesson => {\n      this.props.addLesson(actualLesson);\n    });\n  };\n\n  lessonTab = (lesson, index) => (\n    <LessonTabComponent key={index} lesson={lesson} />\n  );\n\n  render() {\n    return (\n        <div>\n          <ul className=\"nav nav-tabs topic-navbar wbdv-lesson-tabs-list\">\n            {this.props.lessons.map(this.lessonTab)}\n            <li className=\"nav-item\">\n              <div\n                  className=\"nav-link topic-link wbdv-icon-link wbdv-lesson-add-btn\"\n                  onClick={() => {\n                    if (!(Utils.isEmpty(this.props.selected_module))) {\n                      this.createLesson()\n                    }\n                  }}\n              >\n                +\n              </div>\n            </li>\n          </ul>\n          {!Utils.isEmpty(this.props.selected_lesson) &&\n              <TopicPillsComponent\n                  topics={this.props.topics.filter(topic =>\n                      topic.lessonId === this.props.selected_lesson._id\n                  )}\n              />\n          }\n        </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  selected_module: state.selected_module,\n  lessons: state.lessons,\n  selected_lesson: state.selected_lesson,\n  topics: state.topics,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadTopics: (topics) => dispatch(set_topics(topics)),\n  addLesson: (lesson) => dispatch(create_lesson(lesson)),\n  selectLesson: (lesson) => dispatch(select_lesson(lesson)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonTabsComponent);","import React from \"react\";\nimport {connect} from 'react-redux';\nimport {find_modules_for_course, set_modules} from \"../../store/ModuleReducer\";\nimport {select_course} from \"../../store/SelectedCourseReducer\";\nimport ModuleService from \"../../services/ModuleService\";\nimport ModuleListComponent from '../../components/CourseEditor/ModuleList/ModuleListComponent';\nimport EditorNavbarComponent from '../../components/CourseEditor/EditorNavbar/EditorNavbarComponent';\nimport CourseService from '../../services/CourseService';\nimport './CourseEditorContainer.css';\nimport LessonTabsComponent\n  from \"../../components/CourseEditor/LessonView/LessonTabsComponent\";\nimport {select_module} from \"../../store/SelectedModuleReducer\";\n\nconst dummyTabs = ['Build', 'Pages', 'Theme', 'Store', 'Apps'];\n\nclass CourseEditorContainer extends React.Component {\n  state = {\n    currentTab: 'Pages',\n    tabs: dummyTabs,\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    CourseService.findCourseById(id)\n    .then(actualCourse => this.props.loadCourse(actualCourse));\n\n    ModuleService.findModulesForCourse(id)\n    .then(actualModules => {\n      this.props.loadModules(actualModules);\n      this.props.modules.length > 0 && this.props.selectModule(this.props.modules[0]);\n    });\n\n    this.props.filterModules(id);\n\n    CourseService.findCourseById(id)\n    .then((actualCourse) => {\n      const course = {\n        ...actualCourse,\n        tabs: dummyTabs,\n        currentTab: 'Pages',\n      };\n      this.setState({\n        ...this.state,\n        course: course\n      });\n    });\n  };\n\n  selectTab = (tabName) =>\n    alert('Selected tab '.concat(tabName));\n\n  addTab = () => alert('Pretending to add tab');\n\n  render() {\n    return(\n        <div>\n          <EditorNavbarComponent\n            title={(this.props.selected_course || {title: ''}).title}\n            tabs={this.state.tabs}\n            currentTab={this.state.currentTab}\n            selectTab={this.selectTab}\n            addTab={this.addTab}\n          />\n          <div className='wbdv-modules-section'>\n            <div className='wbdv-modules-list'>\n            <ModuleListComponent\n                modules={this.props.modules.filter(\n                    module => module.courseId === (this.props.selected_course || {_id: ''})._id\n                )}\n                courseId={(this.props.selected_course || {_id: ''})._id}\n            />\n            </div>\n            <div className='wbdv-topic-section'>\n              <LessonTabsComponent />\n            </div>\n          </div>\n        </div>\n  )}\n}\n\nconst mapStateToProps = (state) => ({\n  selected_module: state.selected_module,\n  selected_course: state.selected_course,\n  modules: state.modules,\n  selected_lesson: state.selected_lesson,\n  lessons: state.lessons\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadCourse: (course) => dispatch(select_course(course)),\n  loadModules: (modules) => dispatch(set_modules(modules)),\n  selectModule: (module) => dispatch(select_module(module)),\n  filterModules: (courseId) => dispatch(find_modules_for_course(courseId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseEditorContainer);","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n    <div>\n      <div className='wbdv-title-bar'>\n        <h1>\n          Whiteboard\n        </h1>\n      </div>\n      <Link to='/courses/table/'>\n        Browse course offerings\n      </Link>\n      <br/>\n      <Link to='/login/'>\n        Login\n      </Link>\n      <br/>\n      <Link to='/register/'>\n        Need an account? Register here\n      </Link>\n      <br/>\n      <Link to='/profile/'>\n        View your profile\n      </Link>\n      <br/>\n    </div>;\n\nexport default HomeComponent","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './LoginComponent.css';\n\nconst LoginComponent = () => {\n  return (\n      <div>\n        <div className=\"wbdv-title-bar\">\n          <h1>Sign In</h1>\n\n          <Link\n              className=\"wbdv-cancel-btn wbdv-button btn wbdv-green-btn\"\n              to='/'\n          >\n            Cancel\n          </Link>\n        </div>\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username col\"\n                id=\"usr\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Use this username to login\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input\n                id=\"pwd\"\n                className=\"wbdv-field wbdv-password col\"\n                type=\"password\"\n                placeholder=\"abc123\"\n                title=\"Please enter your password\"\n            />\n          </div>\n        </form>\n\n        <div>\n          <Link\n              className=\"wbdv-button wbdv-login btn wbdv-green-btn\"\n              to='/profile/'\n          >\n            Login\n          </Link>\n\n          <div className=\"wbdv-login-zone-links\">\n            <Link\n                className=\"wbdv-link wbdv-forgot-password\"\n                to='/wip/'\n            >\n              Forgot your password?\n            </Link>\n\n            <Link\n                className=\"wbdv-link wbdv-register\"\n                to='/register/'\n            >\n              Don't have an account yet? Register here\n            </Link>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default LoginComponent","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './WIPComponent.css';\n\nconst WIPComponent = () => {\n  return(\n      <div className=\"wbdv-wip-block\">\n        <h1>\n          Whoops!\n        </h1>\n        <div>\n          The page you're looking for hasn't been implemented yet.\n        </div>\n        <Link\n            to='/'\n        >\n          Back to home\n        </Link>\n      </div>\n  )\n};\n\nexport default WIPComponent;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './RegisterComponent.css';\n\nconst RegisterComponent = () => {\n  return (\n      <div>\n        <div className=\"wbdv-title-bar\">\n          <h1>Register</h1>\n\n          <Link\n              className=\"wbdv-ccancel-btn wbdv-button btn wbdv-green-btn\"\n              to=\"/\"\n          >\n            Cancel\n          </Link>\n        </div>\n\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username register-input-field col\"\n                id=\"usr\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Please select a username\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input id=\"pwd\"\n                   className=\"wbdv-field wbdv-password col\"\n                   type=\"password\"\n                   placeholder=\"abc123\"\n                   title=\"Please enter a secure password\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"verify-pwd\" className=\"col-form-label wbdv-input-label\">Verify\n              Password</label>\n\n            <input id=\"verify-pwd\"\n                   className=\"wbdv-field wbdv-password-verify col\"\n                   type=\"password\"\n                   placeholder=\"abc123\"\n                   title=\"Please re-enter your password for verification\"\n            />\n          </div>\n        </form>\n\n        <div>\n          <Link\n              className=\"wbdv-button wbdv-register btn wbdv-green-btn\"\n              to='/profile/'\n          >\n            Register\n          </Link>\n\n          <div>\n            <Link\n                className=\"wbdv-link wbdv-login\"\n                to='/login/'\n            >\n              Already have an account? Click here to log in\n            </Link>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default RegisterComponent;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './ProfileComponent.css';\n\nconst ProfileComponent = () => {\n  return (\n      <div>\n        <div>\n          <div className=\"wbdv-title-bar wbdv-profile-title-bar\">\n            <h1>Profile</h1>\n          </div>\n\n          <div className=\"wbdv-message alert wbdv-green-alert\" role=\"alert\">\n            Profile saved successfully.\n          </div>\n        </div>\n\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username col\"\n                id=\"usr\"\n                value=\"DwayneJohnson\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Use this username to login\"\n                disabled\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input\n                className=\"wbdv-field wbdv-password col\"\n                id=\"pwd\"\n                type=\"password\"\n                placeholder=\"abc123\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"phone\"\n                   className=\"col-form-label wbdv-input-label\">Phone</label>\n\n            <input\n                className=\"wbdv-field wbdv-phone col\"\n                id=\"phone\"\n                type=\"tel\"\n                placeholder=\"(123) 456-7890\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"email\"\n                   className=\"col-form-label wbdv-input-label\">Email</label>\n\n            <input\n                className=\"wbdv-field wbdv-email col\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"<last_name>.<first_initial>@husky.neu.edu\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"dob\" className=\"col-form-label wbdv-input-label\">Date of\n              Birth</label>\n\n            <input\n                className=\"wbdv-field wbdv-dob col\"\n                id=\"dob\"\n                type=\"date\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"role\"\n                   className=\"col-form-label wbdv-input-label\">Role</label>\n\n            <select\n                className=\"wbdv-field wbdv-role col\"\n                id=\"role\"\n            >\n              <option value=\"Faculty\">Faculty</option>\n\n              <option value=\"Student\">Student</option>\n\n              <option value=\"Admin\">Admin</option>\n            </select>\n          </div>\n        </form>\n\n        <button\n            className=\"wbdv-button wbdv-update btn wbdv-green-btn\"\n        >\n          Update Profile\n        </button>\n\n        <Link\n            to=\"/\"\n            className=\"wbdv-button wbdv-logout btn wbdv-red-btn\"\n        >\n          Logout\n        </Link>\n      </div>\n  )\n};\n\nexport default ProfileComponent;","import React, {Component} from 'react'\nimport CourseManagerContainer from \"../containers/CourseManager/CourseManagerContainer\";\nimport CourseEditorContainer from \"../containers/CourseEditor/CourseEditorContainer\";\nimport {BrowserRouter, Route, Redirect} from \"react-router-dom\";\nimport HomeComponent from \"./Home/HomeComponent\";\nimport LoginComponent from \"./Login/LoginComponent\";\nimport WIPComponent from './Error/WIPComponent';\nimport RegisterComponent from './Register/RegisterComponent';\nimport ProfileComponent from './Profile/ProfileComponent';\n\nclass WhiteboardComponent extends Component {\n  render() {\n    return(\n        <BrowserRouter>\n          <div>\n            <Route\n                path=\"/:url*\"\n                exact\n                strict\n                render={\n                  props => <Redirect to={`${props.location.pathname}/`}/>\n                }\n            />\n\n            {/*TODO: port over registraion, profile components*/}\n\n            <Route\n                path='/'\n                exact\n                component={HomeComponent}\n            />\n\n            <Route\n                path='/courses/'\n                exact\n                strict\n                render={\n                  props => <Redirect to={`${props.location.pathname}table/`}/>\n                }\n            />\n\n            <Route\n                path='/courses/:layout/'\n                exact\n                component={CourseManagerContainer}/>\n\n            <Route\n                path='/editor/:id'\n                exact\n                component={CourseEditorContainer}/>\n\n            <Route\n                path='/profile/'\n                exact\n                component={ProfileComponent}/>\n\n            <Route\n                path='/login/'\n                exact\n                component={LoginComponent}/>\n\n            <Route\n                path='/register/'\n                exact\n                component={RegisterComponent}/>\n\n            <Route\n                path='/wip/'\n                exact\n                component={WIPComponent}/>\n\n          </div>\n        </BrowserRouter>\n    )\n  }\n}\n\nexport default WhiteboardComponent","import React from 'react';\nimport './App.css';\nimport WhiteboardComponent from \"./components/WhiteboardComponent\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <WhiteboardComponent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { selectedCourseReducer } from \"./SelectedCourseReducer\";\nimport { moduleReducer } from \"./ModuleReducer\";\nimport { selectedModuleReducer } from \"./SelectedModuleReducer\";\nimport { lessonReducer} from \"./LessonReducer\";\nimport { selectedLessonReducer } from \"./SelectedLessonReducer\";\nimport { topicReducer } from \"./TopicReducer\";\nimport { selectedTopicReducer } from \"./SelectedTopicReducer\";\nimport { widgetReducer } from \"./WidgetReducer\";\nimport { selectedWidgetReducer } from \"./SelectedWidgetReducer\";\nimport { widgetPreviewReducer } from \"./WidgetPreviewReducer\";\n\nexport const rootReducer = (state = {}, action) => {\n  return {\n    selected_course: selectedCourseReducer(state.selected_course, action),\n    modules: moduleReducer(state.modules, action),\n    selected_module: selectedModuleReducer(state.selected_module, action),\n    lessons: lessonReducer(state.lessons, action),\n    selected_lesson: selectedLessonReducer(state.selected_lesson, action),\n    topics: topicReducer(state.topics, action),\n    selected_topic: selectedTopicReducer(state.selected_topic, action),\n    widgets: widgetReducer(state.widgets, action),\n    selected_widget: selectedWidgetReducer(state.selected_widget, action),\n    widget_preview: widgetPreviewReducer(state.widget_preview, action),\n  }\n};","import {rootReducer} from './RootReducer';\nimport {createStore} from 'redux';\n\nexport const store = createStore(rootReducer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\"\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { store } from './store/Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
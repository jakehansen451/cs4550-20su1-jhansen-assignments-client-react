{"version":3,"sources":["services/CourseService.js","components/CourseManager/CourseTable/CourseRow/CourseRowComponent.js","components/CourseManager/CourseTable/CourseTableComponent.js","utils/DateUtils.js","components/CourseManager/CourseGrid/CourseCard/CourseCardComponent.js","components/CourseManager/CourseGrid/CourseGridComponent.js","containers/CourseManager/CourseManagerContainer.js","components/CourseEditor/ModuleList/ModuleListComponent.js","components/CourseEditor/EditorNavbar/LessonTabs/LessonTabsComponent.js","components/CourseEditor/EditorNavbar/EditorNavbarComponent.js","components/CourseEditor/TopicView/TopicPills/TopicPillsComponent.js","components/CourseEditor/TopicView/TopicPills/WidgetList/Widgets/HeadingWidgetComponent.js","components/CourseEditor/TopicView/TopicPills/WidgetList/WidgetListComponent.js","containers/CourseEditor/TopicView/WidgetContainer/WidgetContainer.js","utils/Utils.js","containers/CourseEditor/TopicView/TopicViewContainer.js","containers/CourseEditor/CourseEditorContainer.js","components/Home/HomeComponent.js","components/Login/LoginComponent.js","components/Error/WIPComponent.js","components/Register/RegisterComponent.js","components/Profile/ProfileComponent.js","components/WhiteboardComponent.js","App.js","serviceWorker.js","index.js"],"names":["url","course","fetch","method","body","JSON","stringify","headers","then","response","json","courseId","CourseRowComponent","state","editing","props","newCourseTitle","title","componentDidUpdate","setState","setEditing","saveCourseRow","courseService","_id","modified","Date","toISOString","status","refreshCourses","courseName","className","onChange","event","target","value","to","this","icon","faEdit","owner","onClick","faCheck","faPencilAlt","faTimes","deleteCourse","faTrash","React","Component","CourseTableComponent","addCourse","theActualNewCourse","alert","sortIcon","sort","includes","faSortDown","faSortUp","id","type","placeholder","sortTitle","sortOwner","sortDate","gridButton","courses","map","key","isostr","dt","ds","toDateString","ts","toLocaleTimeString","lastColon","lastIndexOf","concat","replace","substring","CourseCardComponent","saveCourseCard","DateUtils","CourseGridComponent","tableButton","CourseManagerContainer","layout","match","params","setLayout","history","push","courseToDelete","prevState","filter","dir","sortCourses","sortFn","a","b","toString","actualCourses","actualArrayOfCourses","prevProps","snapshot","faArrowCircleLeft","aria-label","faTh","faBars","ModuleListComponent","modules","module","name","selectedModule","selectModule","LessonTabsComponent","tab","selected","selectTab","EditorNavbarComponet","tabs","currentTab","addTab","TopicPillsComponent","topics","topic","selectTopic","active","addTopic","HeadingWidgetComponent","renderWidgetBody","widget","aria-labelledby","data-parent","htmlFor","data-toggle","data-target","aria-expanded","aria-controls","faArrowUp","faArrowDown","WidgetListComponent","createHeadingWidget","activeWidget","widgets","WidgetContainer","length","addWidget","obj","Object","keys","TopicViewContainer","activeTopic","Utils","dummyModules","dummyTabs","CourseEditorContainer","getCourseIDFromURL","window","location","pathname","tabName","CourseService","actualCourse","EditorNavbarComponent","HomeComponent","LoginComponent","WIPComponent","RegisterComponent","ProfileComponent","role","disabled","WhiteboardComponent","path","exact","strict","render","component","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fafd602a.chunk.js","sourcesContent":["const url = \"https://wbdv-generic-server.herokuapp.com/api/jhansen/courses/\";\n\nconst createCourse = (course) =>\n    fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(course),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json());\n\nconst updateCourse = (courseId, course) =>\n    fetch(url + courseId, {\n      method: 'PUT',\n      body: JSON.stringify(course),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n    .then(response => response.json());\n\nconst deleteCourse = (courseId) =>\n    fetch(url + courseId, { method: 'DELETE' })\n    .then(response => response.json());\n\nconst findCourseById = (courseId) =>\n    fetch(url + courseId)\n    .then(response => response.json());\n\nconst findAllCourses = () =>\n    fetch(url)\n    .then(response => response.json());\n\nexport default {\n  createCourse,\n  deleteCourse,\n  findCourseById,\n  findAllCourses,\n  updateCourse\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrash, faPencilAlt, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport courseService from '../../../../services/CourseService';\nimport './CourseRowComponent.css';\n\nexport default class CourseRowComponent extends React.Component {\n  state = {\n    editing: false,\n    course: this.props.course,\n    newCourseTitle: this.props.course.title,\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.course !== this.props.course) {\n      this.setState({course: this.props.course})\n    }\n  };\n\n  setEditing = (editing) =>\n      this.setState({...this.state, editing: editing, newCourseTitle: this.state.course.title});\n\n  saveCourseRow = () =>\n      courseService.updateCourse(\n          this.state.course._id,\n          {...this.state.course,\n            title: this.state.newCourseTitle,\n            modified: (new Date()).toISOString()\n          })\n      .then(status => {\n        this.setEditing(false);\n        this.props.refreshCourses();\n      });\n\n  courseName = () =>\n      this.state.editing ?\n          <input\n              className=\"wbdv-field wbdv-course-name-input\"\n              onChange={(event) => this.setState({\n                newCourseTitle: event.target.value\n              })}\n              value={this.state.newCourseTitle}/> :\n          <Link className='wbdv-icon-link' to={`/editor/${this.state.course._id}`}>\n            {this.state.course.title}\n          </Link>;\n\n  render() {\n    return(\n        <tr className={this.state.editing ? 'wbdv-highlighted' : ''}>\n          <td>\n            <Link to={`/editor/${this.state.course._id}`} >\n              <FontAwesomeIcon\n                  className=\"wbdv-icon-link\"\n                  icon={faEdit}\n              />\n            </Link>\n          </td>\n          <td className=\"wbdv-title\">{this.courseName()}</td>\n          <td className=\"wbdv-owner\">{this.state.course.owner}</td>\n          <td className=\"wbdv-last-modified\">{this.state.course.modified}</td>\n          <td className=\"wbdv-button-row\">\n            {\n              this.state.editing ?\n                  <button\n                      className=\"wbdv-button wbdv-green-btn\"\n                      onClick={this.saveCourseRow}\n                  >\n                    <FontAwesomeIcon icon={faCheck}/>\n                  </button> :\n                  <button\n                      className={\"wbdv-button wbdv-green-btn\"}\n                      onClick={() => this.setEditing(true)}\n                  >\n                    <FontAwesomeIcon icon={faPencilAlt}/>\n                  </button>\n            }\n            {\n              this.state.editing ?\n                  <button\n                    className='float-right wbdv-red-btn wbdv-button wbdv-delete'\n                    onClick={() => this.setEditing(false)}\n                  >\n                    <FontAwesomeIcon icon={faTimes}/>\n                  </button> :\n                  <button\n                      className=\"float-right wbdv-red-btn wbdv-button wbdv-delete\"\n                      onClick={() => this.props.deleteCourse(this.props.course)}\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </button>\n            }\n          </td>\n        </tr>\n    )\n  }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport CourseRowComponent from \"./CourseRow/CourseRowComponent\";\nimport courseService from \"../../../services/CourseService\";\nimport '../../../styles.css';\nimport './CourseTableComponent.css';\n\n\nexport default class CourseTableComponent extends React.Component {\n  state = {\n    newCourseTitle: '',\n  };\n\n  addCourse = (title) => {\n    if (this.state.newCourseTitle !== '') {\n      courseService.createCourse({\n        title: title,\n        owner: 'me',\n        modified: (new Date()).toISOString()\n      })\n      .then(theActualNewCourse => {\n        this.props.refreshCourses();\n        this.setState({newCourseTitle: ''});\n      });\n    } else {\n      alert('New course title cannot be empty.');\n    }\n  };\n\n  sortIcon = () => <FontAwesomeIcon\n      className='wbdv-sort-icon'\n      icon={this.props.sort.includes('desc') ? faSortDown : faSortUp}\n  />;\n\n  render() {\n    return (\n        <div className=\"wbdv-class-table\">\n          <div className=\"wbdv-title-bar wbdv-course-table-header\">\n            <h2>Courses</h2>\n            <form className=\"wbdv-add-course-chunk\">\n              <input\n                  className=\"wbdv-field wbdv-new-course\"\n                  id=\"add-course-title\"\n                  type=\"text\"\n                  onChange={(event) => this.setState({\n                    newCourseTitle: event.target.value\n                  })}\n                  value={this.state.newCourseTitle}\n                  placeholder=\"Add a course\"\n                  title=\"Add the title of the new course\"\n              />\n              <div className=\"wbdv-button wbdv-add-course wbdv-icon-link\"\n                   onClick={ () => this.addCourse(this.state.newCourseTitle) }\n              >+</div>\n            </form>\n          </div>\n          <table className=\"table table-striped wbdv-course-table\">\n            <thead>\n              <tr>\n                <th></th>\n                <th onClick={this.props.sortTitle}>\n                  <div>\n                    Title\n                    {this.props.sort.includes('title') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th onClick={this.props.sortOwner} className=\"wbdv-owner\">\n                  <div>\n                    Owned By\n                    {this.props.sort.includes('owner') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th onClick={this.props.sortDate} className=\"wbdv-last-modified\">\n                  <div>\n                    Modified\n                    {this.props.sort.includes('date') ? this.sortIcon() : null}\n                  </div>\n                </th>\n                <th>\n                  <div className='wbdv-grid-btn-block'>\n                    <div className='wbdv-grid-btn-label'>\n                      Grid view:\n                    </div>\n                    <div className='wbdv-grid-btn'>\n                      {this.props.gridButton}\n                    </div>\n                  </div>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.props.courses.map(course =>\n                <CourseRowComponent\n                    refreshCourses={this.props.refreshCourses}\n                    deleteCourse={this.props.deleteCourse}\n                    key={course._id}\n                    course={course}/>\n            )}\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n}","const toLocalDateTime = (isostr) => {\n  const dt = new Date(isostr);\n  const ds = dt.toDateString();\n  const ts = dt.toLocaleTimeString();\n  const lastColon = ts.lastIndexOf(':');\n  return ds.concat(' ',\n      ts.replace(ts.substring(lastColon, lastColon + 3), ' '));\n};\n\nconst toShortLocalDateTime = (isostr) => {\n  const dt = new Date(isostr);\n  if (dt.toDateString() !== new Date().toDateString()) return dt.toDateString();\n  else {\n    const ts = dt.toLocaleTimeString();\n    const lastColon = ts.lastIndexOf(':');\n    return ts.replace(ts.substring(lastColon, lastColon + 3), ' ');\n  }\n};\n\nexport default {\n  toLocalDateTime,\n  toShortLocalDateTime\n}","import React from 'react';\nimport courseService from \"../../../../services/CourseService\";\nimport DateUtils from \"../../../../utils/DateUtils\";\nimport './CourseCardComponent.css';\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {\n  faCheck,\n  faPencilAlt,\n  faTimes,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport default class CourseCardComponent extends React.Component {\n  state = {\n    editing: false,\n    course: this.props.course,\n    newCourseTitle: this.props.course.title,\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.course !== this.props.course) {\n      this.setState({course: this.props.course})\n    }\n  };\n\n  setEditing = (editing) =>\n      this.setState({editing: editing});\n\n  saveCourseCard = () =>\n      courseService.updateCourse(\n          this.state.course._id,\n          {...this.state.course,\n            title: this.state.newCourseTitle,\n            modified: (new Date()).toISOString()\n          })\n      .then(status => {\n        this.setEditing(false);\n        this.props.refreshCourses();\n      });\n\n  courseName = () =>\n      this.state.editing ?\n          <input\n              className=\"wbdv-field wbdv-course-name-input\"\n              onChange={(event) => this.setState({\n                newCourseTitle: event.target.value\n              })}\n              value={this.state.newCourseTitle}/> :\n          <Link className='wbdv-icon-link' to={`/editor/${this.state.course._id}`}>\n            {this.state.course.title}\n          </Link>;\n\n  render() {\n    return (\n        <div className='wbdv-grid-item'>\n          <div className='wbdv-card-preview'>\n            <div className='wbdv-preview-text'>\n              Preview\n            </div>\n          </div>\n          <div className='wbdv-card-edit-block'>\n            <div className='wbdv-name-block'>\n              {this.courseName()}\n            </div>\n            <div className='wbdv-modified-info'>\n              Modified:&nbsp;\n              {DateUtils.toShortLocalDateTime(this.props.course.modified)}\n            </div>\n            <div className='wbdv-card-btn-row'>\n              {\n                this.state.editing ?\n                    <button\n                        className=\"wbdv-button wbdv-green-btn wbdv-card-btn\"\n                        onClick={this.saveCourseCard}\n                    >\n                      <FontAwesomeIcon icon={faCheck}/>\n                    </button> :\n                    <button\n                        className={\"wbdv-button wbdv-green-btn wbdv-card-btn\"}\n                        onClick={() => this.setEditing(true)}\n                    >\n                      <FontAwesomeIcon icon={faPencilAlt}/>\n                    </button>\n              }\n              {\n                this.state.editing ?\n                    <button\n                        className='float-right wbdv-red-btn wbdv-button wbdv-delete wbdv-card-btn'\n                        onClick={() => this.setEditing(false)}\n                    >\n                      <FontAwesomeIcon icon={faTimes}/>\n                    </button> :\n                    <button\n                        className=\"float-right wbdv-red-btn wbdv-button wbdv-delete wbdv-card-btn\"\n                        onClick={() => this.props.deleteCourse(this.props.course)}\n                    >\n                      <FontAwesomeIcon icon={faTrash} />\n                    </button>\n              }\n            </div>\n          </div>\n        </div>\n    )};\n}","import React from \"react\";\nimport courseService from \"../../../services/CourseService\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport CourseCardComponent from './CourseCard/CourseCardComponent';\nimport './CourseGridComponent.css';\n\nexport default class CourseGridComponent extends React.Component {\n  state = {\n    newCourseTitle: '',\n  };\n\n  addCourse = (title) => {\n    if (this.state.newCourseTitle !== '') {\n      courseService.createCourse({\n        title: title,\n        owner: 'me',\n        modified: (new Date()).toISOString()\n      })\n      .then(theActualNewCourse => {\n        this.props.refreshCourses();\n        this.setState({newCourseTitle: ''});\n      });\n    } else {\n      alert('New course title cannot be empty.');\n    }\n  };\n\n  sortIcon = () => <FontAwesomeIcon\n      className='wbdv-sort-icon'\n      icon={this.props.sort.includes('desc') ? faSortDown : faSortUp}\n  />;\n\n  render() {\n    return(\n        <div className='wbdv-grid-container'>\n          <div className='wbdv-title-bar wbdv-course-grid-header'>\n            <h2>Courses</h2>\n            <form className=\"wbdv-add-course-chunk\">\n              <input\n                  className=\"wbdv-field wbdv-new-course\"\n                  id=\"add-course-title\"\n                  type=\"text\"\n                  onChange={(event) => this.setState({\n                    newCourseTitle: event.target.value\n                  })}\n                  value={this.state.newCourseTitle}\n                  placeholder=\"Add a course\"\n                  title=\"Add the title of the new course\"\n              />\n              <div className=\"wbdv-button wbdv-add-course wbdv-icon-link\"\n                   onClick={ () => this.addCourse(this.state.newCourseTitle) }\n              >+</div>\n            </form>\n          </div>\n          <div className='wbdv-grid-sort-bar'>\n            <div className='wbdv-sort-button-row'>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortTitle}\n              >\n                Title\n                {this.props.sort.includes('title') ? this.sortIcon() : null}\n              </div>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortOwner}\n              >\n                Owner\n                {this.props.sort.includes('owner') ? this.sortIcon() : null}\n              </div>\n              <div\n                  className='wbdv-sort-button'\n                  onClick={this.props.sortDate}\n              >\n                Modified\n                {this.props.sort.includes('date') ? this.sortIcon() : null}\n                </div>\n            </div>\n            <div className='wbdv-table-btn-block'>\n              <div className='wbdv-table-btn-label'>\n                List view:\n              </div>\n              <div className='wbdv-table-btn'>\n                {this.props.tableButton}\n              </div>\n            </div>\n          </div>\n          <div className='wbdv-class-grid'>\n            {this.props.courses.map(course =>\n                <CourseCardComponent\n                    refreshCourses={this.props.refreshCourses}\n                    deleteCourse={this.props.deleteCourse}\n                    key={course._id}\n                    course={course}\n                />\n            )}\n          </div>\n        </div>\n    )\n  }\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowCircleLeft, faTh, faBars } from '@fortawesome/free-solid-svg-icons';\nimport CourseTableComponent from \"../../components/CourseManager/CourseTable/CourseTableComponent\";\nimport CourseGridComponent from \"../../components/CourseManager/CourseGrid/CourseGridComponent\";\nimport courseService from \"../../services/CourseService\";\nimport DateUtils from '../../utils/DateUtils';\nimport '../../styles.css';\nimport './CourseManagerContainer.css';\n\nclass CourseManagerContainer extends React.Component {\n  state = {\n    layout: this.props.match.params.layout,\n    courses: [],\n    sort: 'date-desc',\n  };\n\n  componentDidMount() {\n    courseService.findAllCourses()\n    .then(actualArrayOfCourses =>\n        this.setState({ courses: actualArrayOfCourses.map((course) => {\n          return {...course, modified: DateUtils.toLocalDateTime(course.modified)}\n        })})\n    )\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(prevProps.match.params.layout !== this.props.match.params.layout) {\n      this.setState({ layout: this.props.match.params.layout })\n    }\n  }\n\n  setLayout = (layout) => {\n    this.props.history.push(`/courses/${layout}/`)\n  };\n\n  deleteCourse = (courseToDelete) =>\n      courseService.deleteCourse(courseToDelete._id)\n      .then(status => this.setState(prevState => ({\n        courses: prevState.courses.filter(course => course !== courseToDelete)\n      })));\n\n  sortTitle = (event, dir = '') => {\n    let sort;\n    if (dir) sort = 'title-'.concat(dir);\n    else sort = this.state.sort === 'title-desc' ? 'title-asc' : 'title-desc';\n    this.setState({...this.state, sort});\n  };\n\n  sortOwner = (event, dir = '') => {\n    let sort;\n    if (dir) sort = 'owner-'.concat(dir);\n    else  sort = this.state.sort === 'owner-desc' ? 'owner-asc' : 'owner-desc';\n    this.setState({...this.state, sort});\n  };\n\n  sortDate = () => {\n    this.setState({\n      ...this.state,\n      sort: this.state.sort === 'date-desc' ? 'date-asc' : 'date-desc',\n    });\n  };\n\n  sortCourses = () => {\n    let sortFn;\n    if (this.state.sort === 'title-asc') {\n      sortFn = (a, b) => a.title.toString() <= b.title.toString() ? 1 : -1;\n    } else if (this.state.sort === 'title-desc') {\n      sortFn = (a, b) => a.title.toString() <= b.title.toString() ? -1 : 1;\n    } else if (this.state.sort === 'owner-asc') {\n      sortFn = (a, b) => a.owner.toString() <= b.owner.toString() ? 1 : -1;\n    } else if (this.state.sort === 'owner-desc') {\n      sortFn = (a, b) => a.owner.toString() <= b.owner.toString() ? -1 : 1;\n    } else if (this.state.sort === 'date-asc') {\n      sortFn = (a, b) => a.modified.toString() <= b.modified.toString() ? 1 : -1;\n    } else if (this.state.sort === 'date-desc') {\n      sortFn = (a, b) => a.modified.toString() <= b.modified.toString() ? -1 : 1;\n    }\n    return this.state.courses.sort(sortFn);\n  };\n\n  refreshCourses = () => {\n    courseService.findAllCourses()\n    .then((actualCourses => {\n      this.setState(prevState => ({\n            ...prevState,\n            courses: actualCourses.map(course => ({\n                  ...course,\n                  modified: DateUtils.toLocalDateTime(course.modified)\n            }))\n      }));\n    }))\n  };\n\n  render() {\n    return(\n        <div>\n          <nav className=\"navbar fixed-top wbdv-course-list-search-navbar\">\n            <div>\n              <Link to='/'>\n                <FontAwesomeIcon\n                    icon={faArrowCircleLeft}\n                    className='wbdv-icon-link wbdv-back-btn'\n                />\n              </Link>\n              <div className=\"navbar-brand\">\n                Browse Courses\n              </div>\n            </div>\n            <div className=\"wbdv-search-chunk\">\n              <input\n                  className=\"wbdv-field\"\n                  type=\"search\"\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n              />\n              <button\n                  className=\"wbdv-button wbdv-green-btn wbdv-course-search-button\"\n                  type=\"submit\"\n              >\n                Search\n              </button>\n            </div>\n          </nav>\n          <div className='wbdv-padded-top'>\n            {\n              this.state.layout === 'table' &&\n              <div>\n                <CourseTableComponent\n                    gridButton={\n                      <FontAwesomeIcon\n                          icon={faTh}\n                          onClick={() => this.setLayout('grid')}\n                          className='wbdv-icon-link wbdv-switch-layout-btn'\n                      />\n                    }\n                    sortTitle={this.sortTitle}\n                    sortOwner={this.sortOwner}\n                    sortDate={this.sortDate}\n                    deleteCourse={this.deleteCourse}\n                    courses={this.sortCourses()}\n                    sort={this.state.sort}\n                    refreshCourses={this.refreshCourses}\n                />\n              </div>\n            }\n            {\n              this.state.layout === 'grid' &&\n              <div>\n                <CourseGridComponent\n                    tableButton={\n                      <FontAwesomeIcon\n                          icon={faBars}\n                          onClick={() => this.setLayout('table')}\n                          className='wbdv-icon-link wbdv-switch-layout-btn'\n                      />\n                    }\n                    sortTitle={this.sortTitle}\n                    sortOwner={this.sortOwner}\n                    sortDate={this.sortDate}\n                    deleteCourse={this.deleteCourse}\n                    courses={this.sortCourses()}\n                    sort={this.state.sort}\n                    refreshCourses={this.refreshCourses}\n                />\n              </div>\n            }\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default CourseManagerContainer\n","import React from 'react';\nimport '../../../styles.css';\nimport './ModuleListComponent.css';\n\nconst ModuleListComponent = (props) => {\n  const moduleItem = (module) =>\n      <li\n          key={module.name}\n          className={module.name === props.selectedModule.name ?\n              'list-group-item wbdv-module-item wbdv-module-selected' :\n              'list-group-item wbdv-module-item'}\n          onClick={() => props.selectModule(module)}\n      >\n        <div>{module.name}</div>\n        <button\n            className=\"wbdv-icon-link wbdv-delete-btn wbdv-btn\"\n            onClick={() => alert('Pretending to delete module')}\n        >X</button>\n      </li>;\n\n  return(\n      <div>\n        <div className=\"wbdv-module-list-header\">\n          <div>Modules</div>\n          <button\n              className=\"wbdv-icon-link wbdv-btn\"\n              onClick={() => alert('Pretending to add module')}\n          >+</button>\n        </div>\n\n        <ul className=\"list-group wbdv-module-list\">\n          {props.modules.map(moduleItem)}\n        </ul>\n      </div>\n  )\n};\n\nexport default ModuleListComponent;","import React from \"react\";\nimport '../../../../styles.css';\nimport './LessonTabsComponent.css';\n\nconst LessonTabsComponent = (props) => {\n  return (\n      <li\n          key={props.tab}\n          className={props.selected\n              ? \"nav-item wbdv-navbar-content-item wbdv-selected-tab\"\n              : \"nav-item wbdv-navbar-content-item\"}\n          onClick={() => props.selectTab(props.tab)}\n      >\n        <button className=\"nav-link wbdv-btn\">\n          {props.tab}\n        </button>\n      </li>\n  );\n};\n\nexport default LessonTabsComponent;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faArrowCircleLeft} from \"@fortawesome/free-solid-svg-icons\";\nimport LessonTabsComponent from \"./LessonTabs/LessonTabsComponent\";\nimport '../../../styles.css';\nimport './EditorNavbarComponent.css';\n\nconst EditorNavbarComponet = (props) => {\n  return(\n      <nav className=\"navbar navbar-light wbdv-editor-main-navbar\">\n        <div>\n          <Link to=\"/courses/\">\n            <FontAwesomeIcon\n                className='wbdv-course-editor wbdv-back-btn wbdv-icon-link'\n                icon={faArrowCircleLeft}\n            />\n          </Link>\n          <div className=\"navbar-brand\">{props.title}</div>\n        </div>\n\n\n        <ul className=\"wbdv-navbar-content navbar-nav\">\n          {props.tabs.map((tab) => LessonTabsComponent({\n            tab: tab,\n            selected: tab === props.currentTab,\n            selectTab: props.selectTab,\n          }))}\n          <li className=\"nav-item wbdv-navbar-content-item\">\n            <button\n                className=\"nav-link wbdv-icon-link wbdv-btn\"\n                onClick={props.addTab}\n            >\n              +\n            </button>\n          </li>\n        </ul>\n      </nav>\n  )\n};\n\nexport default EditorNavbarComponet;","import React from 'react';\n\nconst TopicPillsComponent = (props) => {\n\n  const topicPill = (topic) =>\n      <li\n          key={topic.name}\n          className=\"nav-item\"\n          onClick={() => props.selectTopic(topic)}\n      >\n        <div className={props.active.name === topic.name\n            ? \"nav-link wbdv-topic-pill active topic-selected\"\n            : \"nav-link wbdv-topic-pill\"\n        }\n        >\n          {topic.name}\n        </div>\n      </li>;\n\n  return (\n      <div>\n        <ul className=\"nav nav-tabs topic-navbar wbdv-topic-pill-list\">\n          {props.topics.map(topicPill)}\n          <li className=\"nav-item\">\n            <div\n                className=\"nav-link topic-link wbdv-icon-link wbdv-topic-add-btn\"\n                onClick={props.addTopic}\n            >\n              +\n            </div>\n          </li>\n        </ul>\n      </div>\n  )\n};\n\nexport default TopicPillsComponent;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\nimport '../../../../../../styles.css';\nimport './HeadingWidgetComponent.css';\n\n\nexport default class HeadingWidgetComponent extends React.Component {\n\n  renderWidgetBody = () => {\n    const name = this.props.widget.name;\n    return(\n        <div\n            id={name}\n            className=\"collapse show wbdv-widget-body\"\n            aria-labelledby={name.concat('-heading')}\n            data-parent=\"#widget-accordion\"\n        >\n          <form>\n            <div className=\"form-group wbdv-widget-edit-row\">\n              <label className=\"col-form-label wbdv-widget-input-label\" htmlFor=\"widget-name-input\">\n                Widget name:\n              </label>\n              <input\n                  className=\"wbdv-widget-input-field wbdv-field col\"\n                  id=\"widget-name-input\"\n                  type=\"text\"\n                  placeholder=\"Heading widget\"\n              />\n            </div>\n            <div className=\"form-group wbdv-widget-edit-row\">\n              <label className=\"col-form-label wbdv-widget-input-label\">\n                Widget type:\n              </label>\n              <select className=\"wbdv-widget-input-field wbdv-field col\">\n                <option value=\"Heading\">Heading</option>\n                <option value=\"Widget type 2\">Widget type 2</option>\n                <option value=\"Widget type 3\">Widget type 3</option>\n              </select>\n            </div>\n          </form>\n          <form className=\"wbdv-heading-widget-edit\">\n            <div className=\"wbdv-widget-edit-heading\">Heading widget</div>\n            <div className=\"wbdv-widget-edit-row\">\n              <label className=\"col-form-label wbdv-widget-input-label\" htmlFor=\"heading-body-input\">\n                Heading text:\n              </label>\n              <input\n                  className=\"wbdv-widget-input-field wbdv-field col\"\n                  id=\"heading-body-input\"\n                  type=\"text\"\n                  placeholder=\"Put your heading text here\"\n              />\n            </div>\n          </form>\n          <h5>Widget Preview:</h5>\n          <div className=\"wbdv-heading-widget-preview\">\n            <h2>Put your heading text here</h2>\n          </div>\n        </div>\n    )};\n\n  render() {\n    const name = this.props.widget.name;\n    return (\n        <div className=\"card\">\n          <div\n              className=\"card-header wbdv-widget-heading-bar\"\n              id={name.concat('-heading')}\n          >\n            <button\n                className=\"btn btn-link wbdv-clickable-label\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target={'#'.concat(name)}\n                aria-expanded=\"true\"\n                aria-controls={name}\n            >\n              {name}\n            </button>\n            <div>\n              <div className=\"btn-group\">\n                <button className=\"btn btn-light\">\n                  <FontAwesomeIcon icon={faArrowUp}/>\n                </button>\n                <button className=\"btn btn-light\">\n                  <FontAwesomeIcon icon={faArrowDown}/>\n                </button>\n              </div>\n              <button\n                  className=\"wbdv-icon-link wbdv-btn wbdv-delete-btn\"\n                  onClick={() => alert('Pretending to delete widget')}\n              >\n                X\n              </button>\n            </div>\n          </div>\n          {this.props.active ? this.renderWidgetBody() : null}\n\n        </div>\n    )\n  }\n}","import React from 'react';\nimport '../../../../../styles.css';\nimport './WidgetListComponent.css';\nimport HeadingWidgetComponent from \"./Widgets/HeadingWidgetComponent\";\n\nconst WidgetListComponent = (props) => {\n  const createWidget = (widget) => {\n    if (widget.type === 'heading') {\n      return createHeadingWidget(widget);\n    }\n  };\n\n  const createHeadingWidget = (widget) =>\n      <HeadingWidgetComponent\n          key={widget.name}\n          widget={widget}\n          active={props.activeWidget.name === widget.name}\n      />;\n\n\n  return (\n      <div className=\"accordion\" id=\"widget-accordion\">\n        {props.widgets.map(createWidget)}\n      </div>\n  );\n};\n\nexport default WidgetListComponent;\n","import React from 'react';\nimport WidgetListComponent\n  from \"../../../../components/CourseEditor/TopicView/TopicPills/WidgetList/WidgetListComponent\";\nimport './WidgetContainer.css';\n\nexport default class WidgetContainer extends React.Component {\n  state = {\n    widgets: this.props.widgets,\n    activeWidget: this.props.widgets.length > 0 ? this.props.widgets[0] : {}\n  };\n\n  componentDidUpdate() {\n    if (this.state.widgets !== this.props.widgets) {\n      this.setState({\n        widgets: this.props.widgets,\n        activeWidget: this.props.widgets.length > 0 ? this.props.widgets[0] : {}\n      });\n    }\n  }\n\n  addWidget = () => alert('Pretending to add widget');\n\n  render() {\n    return(\n        <div className=\"wbdv-topic-content\">\n          <div className=\"wbdv-section-header\">\n            <div>Widgets</div>\n            <button\n                className=\"wbdv-btn wbdv-icon-link\"\n                onClick={this.addWidget}\n            >\n              +\n            </button>\n          </div>\n          <WidgetListComponent\n              widgets={this.state.widgets}\n              activeWidget={this.state.activeWidget}\n          />\n        </div>\n    )\n  }\n}","const isEmpty = (obj) => Object.keys(obj).length === 0;\n\nexport default {\n  isEmpty\n}","import React from 'react';\nimport TopicPillsComponent from '../../../components/CourseEditor/TopicView/TopicPills/TopicPillsComponent';\nimport WidgetContainer from \"./WidgetContainer/WidgetContainer\";\nimport Utils from '../../../utils/Utils';\n\nexport default class TopicViewContainer extends React.Component {\n  state = {\n    topics: this.props.topics,\n    activeTopic: this.props.topics.length > 0 ? this.props.topics[0] : {}\n  };\n\n  componentDidUpdate() {\n    if (this.state.topics !== this.props.topics) {\n      this.setState({\n        topics: this.props.topics,\n        activeTopic: this.props.topics.length > 0 ? this.props.topics[0] : {}\n      });\n    }\n  }\n\n  addTopic = () => alert('Pretending to add topic');\n\n  selectTopic = (topic) => {\n    this.setState({...this.state, activeTopic: topic})\n  };\n\n  render() {\n    return (\n        <div>\n          <TopicPillsComponent\n              topics={this.state.topics}\n              active={this.state.activeTopic}\n              addTopic={this.addTopic}\n              selectTopic={this.selectTopic}\n          />\n          <WidgetContainer\n              widgets={!Utils.isEmpty(this.state.activeTopic)\n                  ? this.state.activeTopic.widgets\n                  : []\n              }\n          />\n        </div>\n    )\n  }\n}","import React from \"react\";\nimport ModuleListComponent from '../../components/CourseEditor/ModuleList/ModuleListComponent';\nimport EditorNavbarComponent from '../../components/CourseEditor/EditorNavbar/EditorNavbarComponent';\nimport TopicViewContainer from './TopicView/TopicViewContainer';\nimport CourseService from '../../services/CourseService';\nimport Utils from '../../utils/Utils';\nimport './CourseEditorContainer.css';\n\nconst dummyModules = [\n  {\n    name: 'Module 1',\n    topics: [\n        {\n          name: 'Topic 1',\n          widgets: [\n            { name: 'Widget 1', type: 'heading' },\n            { name: 'Widget 2', type: 'heading' },\n          ]\n        },\n      {\n        name: 'Topic 2',\n        widgets: [\n            { name: 'Widget 1', type: 'heading' },\n        ]\n      },\n    ],\n  },\n  {\n    name: 'Module 2',\n    topics: [\n      {\n        name: 'Topic 1',\n        widgets: [\n          { name: 'Widget 1', type: 'heading' },\n          { name: 'Widget 2', type: 'heading' },\n          { name: 'Widget 3', type: 'heading' },\n        ]\n      }\n    ],\n  }\n];\n\nconst dummyTabs = ['Build', 'Pages', 'Theme', 'Store', 'Apps'];\n\nexport default class CourseEditorContainer extends React.Component {\n  state = {\n    currentTab: 'Pages',\n    course: {},\n    selectedModule: {},\n  };\n\n  getCourseIDFromURL = () =>\n      window.location.pathname.replace('/editor/', '').replace('/', '');\n\n  componentDidMount() {\n    const id = this.getCourseIDFromURL();\n    CourseService.findCourseById(id)\n    .then((actualCourse) => {\n      const course = {\n        ...actualCourse,\n        modules: dummyModules,\n        tabs: dummyTabs,\n        currentTab: 'Pages',\n      };\n      const selectedModule = course.modules.length > 0\n          ? course.modules[0]\n          : {};\n      this.setState({...this.state, course: course, selectedModule: selectedModule});\n    });\n  };\n\n  selectModule = (module) =>\n      this.setState({...this.state, selectedModule: module});\n\n  selectTab = (tabName) =>\n    alert('Selected tab '.concat(tabName));\n\n  addTab = () => alert('Pretending to add tab');\n\n  render() {\n    return(\n        <div>\n          {EditorNavbarComponent({\n            title: !Utils.isEmpty(this.state.course) ? this.state.course.title : '',\n            tabs: !Utils.isEmpty(this.state.course) ? this.state.course.tabs : [],\n            currentTab: this.state.currentTab,\n            selectTab: this.selectTab,\n            addTab: this.addTab,\n          })}\n          <div className='wbdv-modules-section'>\n            <div className='wbdv-modules-list'>\n            {ModuleListComponent({\n              modules: !Utils.isEmpty(this.state.course) ? this.state.course.modules : [],\n              selectedModule: this.state.selectedModule,\n              selectModule: this.selectModule,\n            })}\n            </div>\n            <div className='wbdv-topic-section'>\n              <TopicViewContainer\n                  topics={!Utils.isEmpty(this.state.selectedModule)\n                      ? this.state.selectedModule.topics\n                      : []}\n              />\n            </div>\n          </div>\n        </div>\n  )}\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nconst HomeComponent = () =>\n    <div>\n      <div className='wbdv-title-bar'>\n        <h1>\n          Whiteboard\n        </h1>\n      </div>\n      <Link to='/courses/table/'>\n        Browse course offerings\n      </Link>\n      <br/>\n      <Link to='/login/'>\n        Login\n      </Link>\n      <br/>\n      <Link to='/register/'>\n        Need an account? Register here\n      </Link>\n      <br/>\n      <Link to='/profile/'>\n        View your profile\n      </Link>\n      <br/>\n      <Link to='/editor/'>\n        Edit courses\n      </Link>\n      <br/>\n    </div>;\n\nexport default HomeComponent","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport './LoginComponent.css';\n\nconst LoginComponent = () => {\n  return (\n      <div>\n        <div className=\"wbdv-title-bar\">\n          <h1>Sign In</h1>\n\n          <Link\n              className=\"wbdv-cancel-btn wbdv-button btn wbdv-green-btn\"\n              to='/'\n          >\n            Cancel\n          </Link>\n        </div>\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username col\"\n                id=\"usr\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Use this username to login\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input\n                id=\"pwd\"\n                className=\"wbdv-field wbdv-password col\"\n                type=\"password\"\n                placeholder=\"abc123\"\n                title=\"Please enter your password\"\n            />\n          </div>\n        </form>\n\n        <div>\n          <Link\n              className=\"wbdv-button wbdv-login btn wbdv-green-btn\"\n              to='/profile/'\n          >\n            Login\n          </Link>\n\n          <div className=\"wbdv-login-zone-links\">\n            <Link\n                className=\"wbdv-link wbdv-forgot-password\"\n                to='/wip/'\n            >\n              Forgot your password?\n            </Link>\n\n            <Link\n                className=\"wbdv-link wbdv-register\"\n                to='/register/'\n            >\n              Don't have an account yet? Register here\n            </Link>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default LoginComponent","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './WIPComponent.css';\n\nconst WIPComponent = () => {\n  return(\n      <div className=\"wbdv-wip-block\">\n        <h1>\n          Whoops!\n        </h1>\n        <div>\n          The page you're looking for hasn't been implemented yet.\n        </div>\n        <Link\n            to='/'\n        >\n          Back to home\n        </Link>\n      </div>\n  )\n};\n\nexport default WIPComponent;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './RegisterComponent.css';\n\nconst RegisterComponent = () => {\n  return (\n      <div>\n        <div className=\"wbdv-title-bar\">\n          <h1>Register</h1>\n\n          <Link\n              className=\"wbdv-ccancel-btn wbdv-button btn wbdv-green-btn\"\n              to=\"/\"\n          >\n            Cancel\n          </Link>\n        </div>\n\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username register-input-field col\"\n                id=\"usr\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Please select a username\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input id=\"pwd\"\n                   className=\"wbdv-field wbdv-password col\"\n                   type=\"password\"\n                   placeholder=\"abc123\"\n                   title=\"Please enter a secure password\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"verify-pwd\" className=\"col-form-label wbdv-input-label\">Verify\n              Password</label>\n\n            <input id=\"verify-pwd\"\n                   className=\"wbdv-field wbdv-password-verify col\"\n                   type=\"password\"\n                   placeholder=\"abc123\"\n                   title=\"Please re-enter your password for verification\"\n            />\n          </div>\n        </form>\n\n        <div>\n          <Link\n              className=\"wbdv-button wbdv-register btn wbdv-green-btn\"\n              to='/profile/'\n          >\n            Register\n          </Link>\n\n          <div>\n            <Link\n                className=\"wbdv-link wbdv-login\"\n                to='/login/'\n            >\n              Already have an account? Click here to log in\n            </Link>\n          </div>\n        </div>\n      </div>\n  )\n};\n\nexport default RegisterComponent;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './ProfileComponent.css';\n\nconst ProfileComponent = () => {\n  return (\n      <div>\n        <div>\n          <div className=\"wbdv-title-bar wbdv-profile-title-bar\">\n            <h1>Profile</h1>\n          </div>\n\n          <div className=\"wbdv-message alert wbdv-green-alert\" role=\"alert\">\n            Profile saved successfully.\n          </div>\n        </div>\n\n        <form>\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"usr\"\n                   className=\"col-form-label wbdv-input-label\">Username</label>\n\n            <input\n                className=\"wbdv-field wbdv-username col\"\n                id=\"usr\"\n                value=\"DwayneJohnson\"\n                type=\"text\"\n                placeholder=\"DwayneJohnson\"\n                title=\"Use this username to login\"\n                disabled\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"pwd\"\n                   className=\"col-form-label wbdv-input-label\">Password</label>\n\n            <input\n                className=\"wbdv-field wbdv-password col\"\n                id=\"pwd\"\n                type=\"password\"\n                placeholder=\"abc123\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"phone\"\n                   className=\"col-form-label wbdv-input-label\">Phone</label>\n\n            <input\n                className=\"wbdv-field wbdv-phone col\"\n                id=\"phone\"\n                type=\"tel\"\n                placeholder=\"(123) 456-7890\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"email\"\n                   className=\"col-form-label wbdv-input-label\">Email</label>\n\n            <input\n                className=\"wbdv-field wbdv-email col\"\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"<last_name>.<first_initial>@husky.neu.edu\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"dob\" className=\"col-form-label wbdv-input-label\">Date of\n              Birth</label>\n\n            <input\n                className=\"wbdv-field wbdv-dob col\"\n                id=\"dob\"\n                type=\"date\"\n            />\n          </div>\n\n          <div className=\"form-group wbdv-input-form-row\">\n            <label htmlFor=\"role\"\n                   className=\"col-form-label wbdv-input-label\">Role</label>\n\n            <select\n                className=\"wbdv-field wbdv-role col\"\n                id=\"role\"\n            >\n              <option value=\"Faculty\">Faculty</option>\n\n              <option value=\"Student\">Student</option>\n\n              <option value=\"Admin\">Admin</option>\n            </select>\n          </div>\n        </form>\n\n        <button\n            className=\"wbdv-button wbdv-update btn wbdv-green-btn\"\n        >\n          Update Profile\n        </button>\n\n        <Link\n            to=\"/\"\n            className=\"wbdv-button wbdv-logout btn wbdv-red-btn\"\n        >\n          Logout\n        </Link>\n      </div>\n  )\n};\n\nexport default ProfileComponent;","import React from 'react'\nimport CourseManagerContainer from \"../containers/CourseManager/CourseManagerContainer\";\nimport CourseEditorContainer from \"../containers/CourseEditor/CourseEditorContainer\";\nimport {BrowserRouter, Route, Redirect} from \"react-router-dom\";\nimport HomeComponent from \"./Home/HomeComponent\";\nimport LoginComponent from \"./Login/LoginComponent\";\nimport WIPComponent from './Error/WIPComponent';\nimport RegisterComponent from './Register/RegisterComponent';\nimport ProfileComponent from './Profile/ProfileComponent';\n\nclass WhiteboardComponent extends React.Component {\n  render() {\n    return(\n        <BrowserRouter>\n          <div>\n            <Route\n                path=\"/:url*\"\n                exact\n                strict\n                render={\n                  props => <Redirect to={`${props.location.pathname}/`}/>\n                }\n            />\n\n            {/*TODO: port over registraion, profile components*/}\n\n            <Route\n                path='/'\n                exact\n                component={HomeComponent}\n            />\n\n            <Route\n                path='/courses/'\n                exact\n                strict\n                render={\n                  props => <Redirect to={`${props.location.pathname}table/`}/>\n                }\n            />\n\n            <Route\n                path='/courses/:layout/'\n                exact\n                component={CourseManagerContainer}/>\n\n            <Route\n                path='/editor/'\n                exact\n                component={CourseEditorContainer}/>\n\n            <Route\n                path='/editor/:id'\n                exact\n                component={CourseEditorContainer}/>\n\n            <Route\n                path='/profile/'\n                exact\n                component={ProfileComponent}/>\n\n            <Route\n                path='/login/'\n                exact\n                component={LoginComponent}/>\n\n            <Route\n                path='/register/'\n                exact\n                component={RegisterComponent}/>\n\n            <Route\n                path='/wip/'\n                exact\n                component={WIPComponent}/>\n\n          </div>\n        </BrowserRouter>\n    )\n  }\n}\n\nexport default WhiteboardComponent","import React from 'react';\nimport './App.css';\nimport WhiteboardComponent from \"./components/WhiteboardComponent\";\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <WhiteboardComponent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}